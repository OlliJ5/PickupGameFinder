{"version":3,"sources":["resources/kobe.jpg","resources/bball.svg","resources/intro/welcome.png","resources/intro/findGames.png","resources/intro/joinGame.png","resources/intro/createGame.png","services/users.js","services/login.js","services/games.js","services/players.js","reducers/userReducer.js","components/FormField.js","components/FrontPage/NewAccountForm.js","components/FrontPage/LoginForm.js","components/FrontPage/FrontPage.js","components/MapPage/Markers/Game.js","components/MapPage/Markers/Markers.js","components/MapPage/MarkerInfo/GameInfo.js","components/MapPage/MarkerInfo/ClusterInfo.js","components/MapPage/MarkerInfo/MarkerInfo.js","reducers/colorSchemeReducer.js","components/NavigationBar.js","reducers/gameReducer.js","components/MapPage/NewGameForm.js","components/MapPage/Markers/NewGameLocation.js","components/MapPage/NoLocation.js","components/MapPage/Map.js","reducers/locationReducer.js","components/Intro/CarouselLarge.js","components/Intro/Intro.js","App.js","index.js"],"names":["module","exports","token","baseUrl","create","newUser","a","axios","post","update","updatedUser","config","headers","Authorization","put","id","response","data","setToken","newToken","login","credentials","getAllActive","get","newGame","game","username","password","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","gameService","playerService","userService","type","userReducer","state","action","showIntro","TextInput","label","textColor","inputClass","props","useField","field","meta","className","htmlFor","name","style","color","touched","error","connect","colorScheme","segmentClass","createAccount","values","setSubmitting","setFieldError","toast","info","position","POSITION","TOP_CENTER","includes","Grid","Column","Segment","Header","as","initialValues","validationSchema","yup","min","max","required","onSubmit","placeholder","Button","primary","fluid","loading","isSubmitting","disabled","size","useState","notification","setNotification","handleLogin","exception","Group","inline","widths","Message","FrontPage","Responsive","minWidth","inverted","minHeight","padding","vertical","Container","columns","marginTop","Row","fontWeight","fontSize","marginBottom","src","kobe","alt","maxWidth","maxHeight","textAlign","text","Subheader","Divider","horizontal","Game","cluster","zoom","properties","latitude","location","lat","longitude","long","onClick","bball","height","width","Markers","clusters","map","geometry","coordinates","key","point_count","GameInfo","gameInfo","setSelected","prevSelected","setPrevSelected","joinGame","backgroundColor","showPrevIcon","date","endTime","slice","time","Modal","defaultOpen","onClose","closeOnDimmerClick","closeIcon","Icon","link","Content","floated","Description","owner","desc","participants","length","maxParticipants","List","bulleted","participant","Item","ClusterInfo","clusterInfo","supercluster","games","getLeaves","cardColor","i","Card","Meta","MarkerInfo","selectedCluster","changeColor","colorSchemeReducer","logOut","removeItem","navBarColor","Menu","Dropdown","item","gameReducer","concat","updatedGame","find","gameId","createGame","radioValue","setRadioValue","latestClick","setNewGameLocation","useEffect","closeForm","viewport","setFormVisible","setViewport","createNewGame","durationMins","duration","newGameLocation","description","lng","setLatestClick","console","log","right","top","zIndex","integer","formikProps","Radio","value","checked","onChange","toFixed","NewGameLocation","NoLocation","icon","warning","points","addPlayer","selected","formVisible","mapStyle","mapRef","useRef","mapBounds","current","getMap","getBounds","toArray","flat","useSupercluster","bounds","options","radius","maxZoom","updatedParticipants","updatedProperties","updatedSelected","warn","screen","marginRight","bottom","overflow","getCursor","isDragging","ref","mapboxApiAccessToken","process","onViewportChange","click","lngLat","zoomLevel","Math","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","ipLookUp","res","locationReducer","CarouselLarge","index","Image","wrapped","welcome","href","findGames","this","closeModal","React","Component","WithStore","currentSlide","disableIntro","open","setOpen","basic","centered","naturalSlideWidth","naturalSlideHeight","totalSlides","configure","autoClose","hideProgressBar","initializeGames","stayLoggedIn","changeLocation","navigator","geolocation","getCurrentPosition","userLocation","coords","message","then","initGames","keepUserLogged","setLocation","loggedUserJSON","getItem","parse","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dd6d083.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kobe.4b4fdbac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bball.527662f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome.1ac2b16f.png\";","module.exports = __webpack_public_path__ + \"static/media/findGames.f2699377.png\";","module.exports = __webpack_public_path__ + \"static/media/joinGame.ff31d000.png\";","module.exports = __webpack_public_path__ + \"static/media/createGame.07381b68.png\";","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif (process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/users'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newUser) => {\n  return await axios.post(`${baseUrl}${apiUrl}`, newUser)\n}\n\nconst update = async (updatedUser) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}${apiUrl}/${updatedUser.id}`, updatedUser, config)\n  return response.data\n}\n\nexport default {\n  create,\n  update,\n  setToken\n}","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}${apiUrl}`, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/games'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAllActive = async () => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/active`)\n  return response.data\n}\n\nconst create = async (newGame) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, newGame, config)\n  return response.data\n}\n\nexport default {\n  getAllActive,\n  create,\n  setToken\n}","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/players'\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (game) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, game, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  create\n}","import loginService from '../services/login'\nimport gameService from '../services/games'\nimport playerService from '../services/players'\nimport userService from '../services/users'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'STAY_LOGGED_IN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    case 'DISABLE_INTRO':\n      return { ...state, showIntro: false }\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      gameService.setToken(user.token)\n      playerService.setToken(user.token)\n      userService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedInUser')\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const stayLoggedIn = (user) => {\n  return async dispatch => {\n    gameService.setToken(user.token)\n    playerService.setToken(user.token)\n    userService.setToken(user.token)\n    dispatch({\n      type: 'STAY_LOGGED_IN',\n      user\n    })\n  }\n}\n\nexport const disableIntro = (user) => {\n  return async dispatch => {\n    try {\n      const updatedUser = await userService.update({ ...user, showIntro: false })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(updatedUser))\n      dispatch({\n        type: 'DISABLE_INTRO'\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default userReducer","import React from 'react'\nimport { useField } from 'formik'\n\nexport const TextInput = ({ label, textColor, inputClass, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <div className='field'>\n      {label && (\n        <label htmlFor={props.id || props.name} style={{ color: textColor }}>{label}</label>\n      )}\n      <div className='fluid ui input'>\n        <input className={inputClass} {...field} {...props} />\n      </div>\n      {meta.touched && meta.error ? (\n        <div style={{ color: 'red' }}>{meta.error}</div>\n      ) : ''}\n    </div>\n  )\n}","import React from 'react'\nimport userService from '../../services/users'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/userReducer'\nimport { Grid, Segment, Button, Header } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport { Formik, Form } from 'formik'\nimport * as yup from 'yup'\nimport { TextInput } from '../FormField'\n\nconst NewAccountForm = (props) => {\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDark' : ''\n\n  const createAccount = async (values, { setSubmitting, setFieldError }) => {\n    try {\n      const newUser = { ...values }\n      await userService.create(newUser)\n      props.login(newUser.username, newUser.password)\n      toast.info(`Welcome ${newUser.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setSubmitting(false)\n    } catch (exception) {\n      if (exception.response.data.error.includes('unique')) {\n        setFieldError('username', 'Username already taken')\n      }\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column>\n        <Segment className={segmentClass}>\n          <Header as='h2' style={{ color: textColor }}>\n            Sign up\n          </Header>\n          <Formik\n            initialValues={{ username: '', name: '', password: '' }}\n            validationSchema={\n              yup.object({\n                username: yup.string()\n                  .min(3, 'Must be at least 3 characters')\n                  .max(15, 'Must be 15 characters or less')\n                  .required(),\n                name: yup.string()\n                  .min(2, 'Must be at least 2 characters')\n                  .max(30, 'Must be 30 characters or less')\n                  .required(),\n                password: yup.string()\n                  .min(5, 'Must be at least 5 characters')\n                  .required()\n              })\n            }\n            onSubmit={createAccount}\n          >\n            {props => (\n              <Form className='ui form'>\n                <TextInput\n                  label='Username'\n                  name='username'\n                  placeholder='Username (3-15 characters)'\n                  type='text'\n                  inputClass={inputClass}\n                  textColor={textColor}\n                  id='username'\n                />\n                <TextInput\n                  label='Name'\n                  name='name'\n                  placeholder='Name (2-30 characters)'\n                  type='text'\n                  inputClass={inputClass}\n                  textColor={textColor}\n                  id='name'\n                />\n                <TextInput\n                  label='Password'\n                  name='password'\n                  placeholder='Password (min. 5 characters)'\n                  type='password'\n                  inputClass={inputClass}\n                  textColor={textColor}\n                  id='password'\n                />\n                <Button\n                  type='submit'\n                  primary\n                  fluid\n                  loading={props.isSubmitting}\n                  disabled={props.isSubmitting}\n                  size='large'\n                  id='accountCreation-button'\n                >\n                  Sign up\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Segment>\n      </Grid.Column>\n    </Grid >\n  )\n}\n\nexport default connect(null, { login })(NewAccountForm)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/userReducer'\nimport { Button, Message, Header, Form as SemanticForm } from 'semantic-ui-react'\nimport { Formik, Form } from 'formik'\nimport { toast } from 'react-toastify'\nimport { TextInput } from '../FormField'\n\n\nconst LoginForm = (props) => {\n  const [notification, setNotification] = useState('')\n\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const textColor = props.textColor\n\n  const handleLogin = async (values) => {\n    const exception = await props.login(values.username, values.password)\n    if (exception) {\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Welcome ${values.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '' }}\n      onSubmit={handleLogin}\n    >\n      {props => (\n        <Form className='ui form'>\n          <Header\n            as='h2'\n            style={{ color: textColor }}\n          >\n            Login\n          </Header>\n          <SemanticForm.Group inline widths='equal'>\n            <TextInput\n              name='username'\n              placeholder='Username'\n              type='text'\n              inputClass={inputClass}\n              textColor='white'\n              id='login-username'\n            />\n            <TextInput\n              name='password'\n              placeholder='Password'\n              type='password'\n              inputClass={inputClass}\n              textColor='white'\n              id='login-password'\n            />\n            <Button\n              type='submit'\n              primary\n              loading={props.isSubmitting}\n              id='login-button'\n            >\n              Login\n            </Button>\n          </SemanticForm.Group>\n          {notification !== '' && (\n            <Message>\n              {notification}\n            </Message>\n          )}\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default connect(null, { login })(LoginForm)","import React from 'react'\nimport { Grid, Header, Responsive, Divider, Container, Segment } from 'semantic-ui-react'\nimport NewAccountForm from './NewAccountForm'\nimport LoginForm from './LoginForm'\nimport kobe from '../../resources/kobe.jpg'\n\nconst FrontPage = ({ colorScheme }) => {\n  const textColor = colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = colorScheme === 'dark' ? 'segmentDark' : ''\n\n  return (\n    <div>\n      <Responsive minWidth={768}>\n        <Segment\n          inverted\n          style={{ minHeight: 600, padding: '1em 0em' }}\n          vertical\n        >\n          <Container>\n            <Grid columns={2} style={{ marginTop: '25px' }}>\n              <Grid.Row>\n                <Grid.Column>\n                </Grid.Column>\n                <Grid.Column>\n                  <LoginForm colorScheme={colorScheme} textColor={'white'} />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <Header\n              as='h1'\n              inverted\n              style={{\n                fontWeight: 'normal',\n                fontSize: '3em',\n                marginBottom: 0,\n                marginTop: '3em'\n              }}\n            >\n              Pickupgame finder\n            </Header>\n            <Header\n              as='h2'\n              inverted\n              style={{\n                fontSize: '1.5em',\n                fontWeight: 'normal',\n                marginTop: '1em'\n              }}\n            >\n              Find local pickupgames and start playing!<br /> Sign up below!\n            </Header>\n          </Container>\n        </Segment>\n        <Container>\n          <Grid columns={2}>\n            <Grid.Row style={{ marginTop: '100px' }}>\n              <Grid.Column>\n                <img src={kobe} alt=\"Basketball legend Kobe Bryant\" style={{ maxWidth: '65%', maxHeight: '65%' }} />\n              </Grid.Column>\n              <Grid.Column>\n                <NewAccountForm colorScheme={colorScheme} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </Responsive>\n      <Responsive maxWidth={767}>\n        <Segment\n          inverted\n          textAlign='center'\n          style={{ minHeight: 250, padding: '1em 0em' }}\n          vertical\n        >\n          <Container text>\n            <Header\n              as='h1'\n              inverted\n              style={{\n                fontWeight: 'normal',\n                marginBottom: 0,\n                marginTop: '2em'\n              }}\n            >\n              Pickupgame finder\n              <Header.Subheader\n                style={{\n                  fontWeight: 'normal',\n                  marginTop: '0.5em'\n                }}\n              >\n                Find local pickupgames and start playing!\n              </Header.Subheader>\n            </Header>\n          </Container>\n        </Segment>\n        <Container>\n          <Segment style={{ marginTop: '30px' }} className={segmentClass}>\n            <LoginForm colorScheme={colorScheme} textColor={colorScheme === 'dark' ? 'white' : 'black'} />\n          </Segment>\n          <Divider horizontal>\n            <p style={{ color: textColor }}>OR</p>\n          </Divider>\n          <NewAccountForm colorScheme={colorScheme} />\n        </Container>\n      </Responsive>\n    </div >\n  )\n}\n\nexport default FrontPage","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport bball from '../../../resources/bball.svg'\n\nconst Game = ({ cluster, zoom }) => {\n  const game = cluster.properties\n  return (\n\n    <Marker\n      latitude={game.location.lat}\n      longitude={game.location.long}\n    >\n      <div onClick={() => { zoom(cluster) }}>\n        <img src={bball} alt='basketballgame here' style={{ height: '25px', width: '25px' }} />\n      </div>\n    </Marker>\n  )\n}\n\nexport default Game","import React from 'react'\nimport Game from './Game'\nimport { Marker } from 'react-map-gl'\n\nconst Markers = ({ clusters, zoom }) => {\n  return (\n    clusters.map(cluster => {\n      const [longitude, latitude] = cluster.geometry.coordinates\n\n      if (cluster.properties.cluster) {\n        return (\n          <Marker\n            key={cluster.id}\n            latitude={latitude}\n            longitude={longitude}\n          >\n            <div onClick={() => zoom(cluster)} style={{ 'color': 'black', 'backgroundColor': '#cc5500', 'borderRadius': '50%', 'width': '25px', 'height': '25px', 'textAlign': 'center', 'lineHeight': '25px' }}>\n              {cluster.properties.point_count}\n            </div>\n          </Marker>\n        )\n      }\n\n      return (\n        <Game\n          key={cluster.properties.id}\n          cluster={cluster}\n          zoom={zoom}\n        />\n      )\n    })\n  )\n}\n\nexport default Markers","import React from 'react'\nimport { Modal, Icon, Header, List, Divider, Button } from 'semantic-ui-react'\n\nconst GameInfo = ({ gameInfo, setSelected, prevSelected, setPrevSelected, joinGame, colorScheme }) => {\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#141d26' : '',\n    inverted: colorScheme === 'dark'\n  }\n\n  const showPrevIcon = prevSelected !== null ? true : false\n  const date = gameInfo.endTime.slice(0, 10)\n  const time = gameInfo.endTime.slice(11, 16)\n\n  const goBack = () => {\n    setSelected(prevSelected)\n  }\n\n  const close = () => {\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal defaultOpen={true} onClose={close} closeOnDimmerClick={false} closeIcon>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor }}>\n        {showPrevIcon && (\n          <Icon inverted={style.inverted} link name='arrow left' onClick={goBack} />\n        )}\n      </Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        <Button floated='right' primary onClick={() => joinGame(gameInfo.id)}>\n          Join\n        </Button>\n        <Modal.Description>\n          <Header style={{ color: style.textColor }}>Game by {gameInfo.owner.username}</Header>\n          <p style={{ color: style.textColor }}>{gameInfo.desc}</p>\n          <p style={{ color: style.textColor }}>Participants: ({gameInfo.participants.length}/{gameInfo.maxParticipants})</p>\n          <List bulleted>\n            {gameInfo.participants.map(participant =>\n              <List.Item key={participant.id} style={{ color: style.textColor }}>\n                {participant.username}\n              </List.Item>\n            )}\n          </List>\n          <Divider />\n          <p style={{ color: style.textColor }}>Game ends at: {date} {time} GMT</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default GameInfo","import React from 'react'\nimport { Modal, Card } from 'semantic-ui-react'\n\nconst ClusterInfo = ({ clusterInfo, supercluster, setSelected, setPrevSelected, colorScheme }) => {\n  const games = supercluster.getLeaves(clusterInfo.id)\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#141d26' : '',\n    cardColor: colorScheme === 'dark' ? '#1c2836' : ''\n  }\n\n  const close = () => {\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal defaultOpen={true} onClose={close} closeOnDimmerClick={false} closeIcon>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor, color: style.textColor }}>Games in this location</Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        {games.map((game, i) =>\n          <Card style={{ backgroundColor: style.cardColor }} fluid onClick={() => { setPrevSelected(clusterInfo); setSelected(game) }} key={game.properties.id}>\n            <Card.Content>\n              <Card.Header style={{ color: style.textColor }}>\n                Game {i}\n              </Card.Header>\n              <Card.Meta style={{ color: style.textColor }}>\n                Created by {game.properties.owner.username}\n              </Card.Meta>\n              <Card.Description style={{ color: style.textColor }}>\n                {game.properties.desc}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default ClusterInfo","import React from 'react'\nimport GameInfo from './GameInfo'\nimport ClusterInfo from './ClusterInfo'\n\nconst MarkerInfo = ({ selectedCluster, prevSelected, setSelected, setPrevSelected, joinGame, supercluster, colorScheme }) => {\n  if (selectedCluster.properties.cluster) {\n    return (\n      <ClusterInfo\n        clusterInfo={selectedCluster}\n        supercluster={supercluster}\n        setSelected={setSelected}\n        setPrevSelected={setPrevSelected}\n        colorScheme={colorScheme}\n      />\n    )\n  } else {\n    return (\n      <GameInfo\n        gameInfo={selectedCluster.properties}\n        setSelected={setSelected}\n        prevSelected={prevSelected}\n        setPrevSelected={setPrevSelected}\n        joinGame={joinGame}\n        colorScheme={colorScheme}\n      />\n    )\n  }\n}\n\nexport default MarkerInfo","const colorSchemeReducer = (state = 'light', action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return action.colorScheme\n    default:\n      return state\n  }\n}\n\nexport const changeColor = (colorScheme) => {\n  window.localStorage.setItem('colorScheme', colorScheme)\n  return {\n    type: 'CHANGE_COLOR',\n    colorScheme\n  }\n}\n\nexport default colorSchemeReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown } from 'semantic-ui-react'\nimport { logOut } from '../reducers/userReducer'\nimport { changeColor } from '../reducers/colorSchemeReducer'\n\nconst Navigation = (props) => {\n\n  const toggleColor = () => {\n    const color = props.colorScheme === 'light' ? 'dark' : 'light'\n    props.changeColor(color)\n  }\n\n  const navBarColor = props.colorScheme === 'dark' ? '#141d26' : '#0E6EB8'\n\n  return (\n    <Menu style={{ backgroundColor: navBarColor }}>\n      <Menu.Item name='home' style={{ color: 'white' }}>\n        Home\n      </Menu.Item>\n      <Menu.Menu position='right'>\n        <Dropdown item style={{ color: 'white' }} text={props.user.username}>\n          <Dropdown.Menu style={{ backgroundColor: navBarColor }}>\n            <Dropdown.Item onClick={toggleColor}>\n              <p style={{ color: 'white' }}>\n                {props.colorScheme === 'light' ? 'Use Darkmode' : 'Use lightmode'}\n              </p>\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => props.logOut()} style={{ color: 'white' }}>\n              <p style={{ color: 'white' }}>\n                Logout\n              </p>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    colorScheme: state.colorScheme,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { logOut, changeColor })(Navigation)","import gameService from '../services/games'\n\nconst gameReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_GAMES':\n      return action.data\n    case 'ADD_GAME':\n      return state.concat(action.data)\n    case 'ADD_PLAYER': {\n      const updatedGame = state.find(game => game.id === action.gameId)\n      updatedGame.participants = updatedGame.participants.concat(action.user)\n      return state.map(game => game.id === action.gameId ? updatedGame : game)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeGames = () => {\n  return async dispatch => {\n    const games = await gameService.getAllActive()\n    dispatch({\n      type: 'INIT_GAMES',\n      data: games\n    })\n  }\n}\n\nexport const addPlayer = (user, gameId) => {\n  return {\n    type: 'ADD_PLAYER',\n    user,\n    gameId\n  }\n}\n\nexport const createGame = (game) => {\n  return async dispatch => {\n    try {\n      const newGame = await gameService.create(game)\n      dispatch({\n        type: 'ADD_GAME',\n        data: newGame\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default gameReducer","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { createGame } from '../../reducers/gameReducer'\nimport { Segment, Form as SemanticForm, Header, Button, Icon } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport { Formik, Form } from 'formik'\nimport { TextInput } from '../FormField'\nimport * as yup from 'yup'\n\nconst NewGameForm = (props) => {\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDarkest' : ''\n\n  const radioValue = props.radioValue\n  const setRadioValue = props.setRadioValue\n  const location = props.location\n  const latestClick = props.latestClick\n  const setNewGameLocation = props.setNewGameLocation\n\n  useEffect(() => {\n    const selectedLocation = radioValue === 'curr' ? location : latestClick\n    setNewGameLocation(selectedLocation)\n  }, [latestClick, location, setNewGameLocation, radioValue])\n\n  const closeForm = () => {\n    if (props.viewport) {\n      props.setFormVisible(false)\n      props.setViewport({ ...props.viewport, height: '100vh' })\n    } else {\n      props.setFormVisible(false)\n    }\n  }\n\n  const createNewGame = async (values, { setSubmitting }) => {\n    const newGame = {\n      durationMins: values.duration,\n      location: props.newGameLocation,\n      desc: values.description,\n      maxParticipants: values.participants\n    }\n\n    try {\n      await props.createGame(newGame)\n      toast.info(`Created a game for ${values.participants} players!`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setSubmitting(false)\n      setRadioValue('curr')\n      props.setNewGameLocation({ lat: 0, lng: 0 })\n      props.setLatestClick({ lat: 0, lng: 0 })\n      closeForm()\n\n    } catch (exception) {\n      console.log('Exception', exception)\n    }\n  }\n\n  return (\n    <Segment className={segmentClass}>\n      <div style={{ position: 'absolute', right: '10px', top: '10px', zIndex: '10' }} onClick={closeForm}>\n        <Icon\n          name='close'\n          size='large'\n          inverted={props.colorScheme === 'dark'}\n        />\n      </div>\n      <Formik\n        initialValues={{ duration: '', description: '', participants: 10 }}\n        validationSchema={\n          yup.object({\n            duration: yup.number()\n              .integer()\n              .min(1, 'The game must go on for at least a minute')\n              .max(180, 'The game cannot be longer than 180 minutes')\n              .required(),\n            description: yup.string()\n              .min(5, 'Must be at least 5 characters')\n              .max(140, 'Must be 140 characters or less')\n              .required(),\n            participants: yup.number()\n              .required()\n              .integer()\n              .min(1, 'The game must have at least one player')\n              .max(30, 'The game cannot have more than 30 players')\n          })\n        }\n        onSubmit={createNewGame}\n      >\n        {formikProps => (\n          <Form className='ui form'>\n            <Header as='h2' style={{ color: textColor }}>\n              Start a game!\n            </Header>\n            <SemanticForm.Group inline>\n              <label style={{ color: textColor }}>Location</label>\n              <SemanticForm.Radio\n                value='select'\n                checked={radioValue === 'select'}\n                onChange={() => setRadioValue('select')}\n              />\n              <label style={{ color: textColor }}>Select from map</label>\n              <SemanticForm.Radio\n                value='curr'\n                checked={radioValue === 'curr'}\n                onChange={() => setRadioValue('curr')}\n              />\n              <label style={{ color: textColor }}>Your location</label>\n            </SemanticForm.Group>\n            <p style={{ color: textColor }}>lat: {props.newGameLocation.lat.toFixed(4)}</p>\n            <p style={{ color: textColor }}>long: {props.newGameLocation.lng.toFixed(4)}</p>\n            <TextInput\n              label='Duration'\n              name='duration'\n              placeholder='Duration in mins (1-180)'\n              type='number'\n              inputClass={inputClass}\n              textColor={textColor}\n              id='duration'\n            />\n            <TextInput\n              label='Description'\n              name='description'\n              placeholder='Description (5-140 chars)'\n              type='text'\n              inputClass={inputClass}\n              textColor={textColor}\n              id='description'\n            />\n            <TextInput\n              label='Maximum players'\n              name='participants'\n              placeholder='Max amount of participants (1-30)'\n              type='number'\n              inputClass={inputClass}\n              textColor={textColor}\n              id='participants'\n            />\n            <Button\n              type='submit'\n              primary\n              fluid\n              loading={formikProps.isSubmitting}\n              disabled={formikProps.isSubmitting}\n              size='large'\n              id='gamecreation-button'\n            >\n              Create a game\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { createGame })(NewGameForm)","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport { Icon } from 'semantic-ui-react'\n\n\nconst NewGameLocation = ({ location }) => (\n  <Marker\n    latitude={location.lat}\n    longitude={location.lng}\n  >\n    <Icon\n      name='map marker alternate'\n      color='red'\n      size='big'\n    />\n  </Marker>\n)\n\nexport default NewGameLocation","import React from 'react'\nimport { Container, Message, Icon } from 'semantic-ui-react'\n\nconst NoLocation = () => (\n  <Container>\n    <Message icon warning>\n      <Icon name='location arrow' />\n      <Message.Content>\n        <Message.Header>Pls, give location</Message.Header>\n        Please accept or deny the use of your location to continue using the app\n      </Message.Content>\n    </Message>\n  </Container>\n)\n\nexport default NoLocation","import React, { useState, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport playerService from '../../services/players'\nimport ReactMapGL, { FlyToInterpolator } from 'react-map-gl'\nimport useSupercluster from 'use-supercluster'\nimport Markers from './Markers/Markers'\nimport MarkerInfo from './MarkerInfo/MarkerInfo'\nimport Navigation from '../NavigationBar'\nimport NewGameForm from './NewGameForm'\nimport NewGameLocation from './Markers/NewGameLocation'\nimport NoLocation from './NoLocation'\nimport { toast } from 'react-toastify'\nimport { addPlayer } from '../../reducers/gameReducer'\nimport { Responsive, Grid, Button } from 'semantic-ui-react'\n\nconst Map = (props) => {\n  const [viewport, setViewport] = useState({})\n  const [selected, setSelected] = useState(null)\n  const [prevSelected, setPrevSelected] = useState(null)\n  const [latestClick, setLatestClick] = useState({ lat: 0, lng: 0 })\n  const [formVisible, setFormVisible] = useState(false)\n  const [newGameLocation, setNewGameLocation] = useState({ lat: 0, lng: 0 })\n  const [radioValue, setRadioValue] = useState('curr')\n\n  const mapStyle = props.colorScheme === 'dark' ? 'mapbox://styles/ogrousu/ck6g74as70kw51io8h0ceo6h3' : 'mapbox://styles/ogrousu/ckae1dzbv0fvc1ilbhpvgy23t'\n\n  useEffect(() => {\n    //after user location is fetched, we initialize the map\n    setViewport({\n      latitude: props.location === null ? 0 : props.location.lat,\n      longitude: props.location === null ? 0 : props.location.lng,\n      zoom: props.location === null ? 0 : 12,\n      height: '100vh',\n      width: '100vw'\n    })\n  }, [props.location])\n\n  //boundaries of map for supercluster\n  const mapRef = useRef()\n  const mapBounds = mapRef.current ? mapRef.current.getMap().getBounds().toArray().flat() : null\n\n  //get game clusters from supercluster\n  const { clusters, supercluster } = useSupercluster({\n    points: props.points,\n    zoom: viewport.zoom,\n    bounds: mapBounds,\n    options: { radius: 30, maxZoom: 15 }\n  })\n\n  const joinGame = async (game) => {\n    try {\n      const response = await playerService.create({ game })\n      toast.info('Joined the game successfully', {\n        position: toast.POSITION.TOP_CENTER\n      })\n      props.addPlayer(response.user, response.game)\n\n      const updatedParticipants = selected.properties.participants.concat(response.user)\n      const updatedProperties = { ...selected.properties, participants: updatedParticipants }\n      const updatedSelected = {\n        geometry: selected.geometry,\n        properties: updatedProperties,\n        type: selected.type\n      }\n      setSelected(updatedSelected)\n    } catch (exception) {\n      toast.warn(exception.response.data.error, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  const zoom = (cluster) => {\n    //if no id, we are zooming fully to a single game, otherwise we are zooming\n    //until the cluster would break into multiple games or full zoom if they are too close to separate\n    const zoomLevel = !cluster.id ? 15 : Math.min(supercluster.getClusterExpansionZoom(cluster.id), 15)\n    const [longitude, latitude] = cluster.geometry.coordinates\n    setSelected(cluster)\n\n    setViewport({\n      ...viewport,\n      latitude,\n      longitude,\n      zoom: zoomLevel,\n      transitionInterpolator: new FlyToInterpolator({\n        speed: 1\n      }),\n      transitionDuration: 'auto'\n    })\n  }\n\n  const mapClick = (click) => {\n    if (radioValue === 'select' && formVisible) {\n      setLatestClick({ lat: click.lngLat[1], lng: click.lngLat[0] })\n    }\n  }\n\n  const getCursorStyle = ({ isDragging }) => {\n    if (radioValue === 'select' && formVisible) {\n      return 'crosshair'\n    }\n    return isDragging ? 'grabbing' : 'grab'\n  }\n\n  const openForm = () => {\n    if (window.screen.width > 767) {\n      setFormVisible(true)\n    } else {\n      setFormVisible(true)\n      setViewport({ ...viewport, height: '50vh' })\n    }\n  }\n\n  if (props.location === null) {\n    return (\n      <NoLocation />\n    )\n  }\n\n  return (\n    <div>\n      {!formVisible && (\n        <Button\n          primary\n          style={{ position: 'absolute', top: '50px', right: '10px', zIndex: '9' }}\n          onClick={openForm}\n        >\n          New Game\n        </Button>\n      )\n      }\n      {formVisible && (\n        <div>\n          <Responsive minWidth={768}>\n            <Grid style={{ position: 'absolute', top: '0', right: '0', marginTop: '35px', marginRight: '10px', zIndex: '9' }}>\n              <Grid.Column>\n                <NewGameForm\n                  latestClick={latestClick}\n                  setLatestClick={setLatestClick}\n                  setFormVisible={setFormVisible}\n                  newGameLocation={newGameLocation}\n                  setNewGameLocation={setNewGameLocation}\n                  radioValue={radioValue}\n                  setRadioValue={setRadioValue}\n                />\n              </Grid.Column>\n            </Grid>\n          </Responsive>\n\n          <Responsive maxWidth={767}>\n            <div style={{ position: 'fixed', bottom: '0', width: '100%', maxHeight: '50vh', overflow: 'auto', zIndex: '9' }}>\n              <NewGameForm\n                latestClick={latestClick}\n                setLatestClick={setLatestClick}\n                setFormVisible={setFormVisible}\n                newGameLocation={newGameLocation}\n                setNewGameLocation={setNewGameLocation}\n                radioValue={radioValue}\n                setRadioValue={setRadioValue}\n                viewport={viewport}\n                setViewport={setViewport}\n              />\n            </div>\n          </Responsive>\n        </div>\n      )}\n\n      <ReactMapGL\n        getCursor={getCursorStyle}\n        maxZoom={15}\n        ref={mapRef}\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        mapStyle={mapStyle}\n        onViewportChange={viewport => {\n          setViewport(viewport)\n        }}\n        onClick={mapClick}\n      >\n        <Navigation />\n        {formVisible && (\n          <NewGameLocation location={newGameLocation} />\n        )}\n        <Markers clusters={clusters} zoom={zoom} />\n        {selected && (\n          <MarkerInfo\n            selectedCluster={selected}\n            prevSelected={prevSelected}\n            setSelected={setSelected}\n            setPrevSelected={setPrevSelected}\n            joinGame={joinGame}\n            supercluster={supercluster}\n            colorScheme={props.colorScheme}\n          />\n        )}\n      </ReactMapGL>\n    </div >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  //modify game data to GeoJSON for supercluster\n  const points = state.games.map(game => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      ...game\n    },\n    geometry: {\n      type: 'Point',\n      coordinates: [\n        game.location.long,\n        game.location.lat\n      ]\n    }\n  }))\n\n  return {\n    points,\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { addPlayer })(Map)","import axios from 'axios'\n\nconst locationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOCATION':\n      return action.location\n    default:\n      return state\n  }\n}\n\nconst ipLookUp = async () => {\n  const res = await axios.get('https://ipapi.co/json/')\n  return res.data\n}\n\nexport const changeLocation = () => {\n  return async dispatch => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      },\n      (message) => {\n        console.log('failed to get location', message)\n        const response = ipLookUp()\n        response.then(res => {\n          console.log('response', res)\n          const userLocation = {\n            lat: res.latitude,\n            lng: res.longitude\n          }\n          dispatch({\n            type: 'CHANGE_LOCATION',\n            location: userLocation\n          })\n        })\n      })\n\n    } else {\n      console.log('geolocation not supported in this browser')\n      const response = ipLookUp()\n      response.then(res => {\n        const userLocation = {\n          lat: res.latitude,\n          lng: res.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      })\n    }\n  }\n}\n\nexport default locationReducer","import React from 'react'\nimport { WithStore, Slider, Slide, ButtonNext } from 'pure-react-carousel'\nimport { Image, Icon, Button } from 'semantic-ui-react'\nimport welcome from '../../resources/intro/welcome.png'\nimport findGames from '../../resources/intro/findGames.png'\nimport joinGame from '../../resources/intro/joinGame.png'\nimport createGame from '../../resources/intro/createGame.png'\n\nclass CarouselLarge extends React.Component {\n  render() {\n    return (\n      <div>\n        <Slider>\n          <Slide index={0}>\n            <Image\n              wrapped\n              src={welcome}\n              as='a'\n              href='http://www.freepik.com'\n            />\n            <p>Designed by upklyak</p>\n          </Slide>\n          <Slide index={1}>\n            <Image wrapped src={findGames} />\n          </Slide>\n          <Slide index={2}>\n            <Image wrapped src={joinGame} />\n          </Slide>\n          <Slide index={3}>\n            <Image wrapped src={createGame} />\n          </Slide>\n        </Slider>\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          {this.props.current < 3 && (\n            <ButtonNext className='ui massive icon circular basic inverted button'>\n              <Icon name='arrow right' />\n            </ButtonNext>\n          )}\n          {this.props.current === 3 && (\n            <Button\n              className='ui massive icon green basic circular inverted'\n              onClick={this.props.closeModal}\n            >\n              <Icon name='check' />\n            </Button>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WithStore(CarouselLarge, state => ({\n  current: state.currentSlide\n}))","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Modal } from 'semantic-ui-react'\nimport { CarouselProvider } from 'pure-react-carousel'\nimport 'pure-react-carousel/dist/react-carousel.es.css'\nimport CarouselLarge from './CarouselLarge'\nimport { disableIntro } from '../../reducers/userReducer'\n\nconst Intro = ({ user, disableIntro }) => {\n  const [open, setOpen] = useState(true)\n\n  const closeModal = async () => {\n    setOpen(false)\n    disableIntro(user)\n  }\n\n  return (\n    <Modal\n      basic\n      open={open}\n      centered={false}\n      closeOnDimmerClick={false}\n    >\n      <CarouselProvider\n        naturalSlideWidth={1}\n        naturalSlideHeight={0.6}\n        totalSlides={4}\n      >\n        <CarouselLarge closeModal={closeModal} />\n      </CarouselProvider>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { disableIntro })(Intro)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport FrontPage from './components/FrontPage/FrontPage'\nimport Map from './components/MapPage/Map'\nimport { initializeGames } from './reducers/gameReducer'\nimport { stayLoggedIn } from './reducers/userReducer'\nimport { changeLocation } from './reducers/locationReducer'\nimport { changeColor } from './reducers/colorSchemeReducer'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.css'\nimport Intro from './components/Intro/Intro'\n\ntoast.configure({\n  autoClose: 3500,\n  hideProgressBar: true\n})\n\nconst App = (props) => {\n  const initGames = props.initializeGames\n  const keepUserLogged = props.stayLoggedIn\n  const setLocation = props.changeLocation\n  const changeColor = props.changeColor\n\n  useEffect(() => {\n    initGames()\n  }, [initGames])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      keepUserLogged(user)\n    }\n  }, [keepUserLogged])\n\n  useEffect(() => {\n    setLocation()\n  }, [setLocation])\n\n  useEffect(() => {\n    const colorScheme = window.localStorage.getItem('colorScheme')\n    if (colorScheme) {\n      changeColor(colorScheme)\n    } else {\n      changeColor('light')\n    }\n  }, [changeColor])\n\n  if (props.user === null) {\n    return (\n      <div className={props.colorScheme === 'dark' ? 'bodyDark' : 'bodyLight'}>\n        <FrontPage colorScheme={props.colorScheme} />\n      </div>\n    )\n  }\n  return (\n    <div className={props.colorScheme === 'dark' ? 'bodyDark' : 'bodyLight'}>\n      {props.user.showIntro && (\n        <Intro />\n      )}\n      {!props.user.showIntro && (\n        <Map />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { initializeGames, stayLoggedIn, changeLocation, changeColor })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './reducers/gameReducer'\nimport userReducer from './reducers/userReducer'\nimport locationReducer from './reducers/locationReducer'\nimport colorSchemeReducer from './reducers/colorSchemeReducer'\n\n// used colors:\n// darkest: #141d26\n// mid: #1c2836\n// lightest: #243447\n\nconst reducer = combineReducers({\n  games: gameReducer,\n  user: userReducer,\n  location: locationReducer,\n  colorScheme: colorSchemeReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}