{"version":3,"sources":["kobe.jpg","services/users.js","services/login.js","services/games.js","services/players.js","reducers/loginReducer.js","components/forms/NewAccountForm.js","components/forms/LoginForm.js","components/FrontPage.js","components/Map.js","components/Navigation.js","reducers/gameReducer.js","components/forms/NewGameForm.js","components/MapPage.js","reducers/locationReducer.js","App.js","index.js"],"names":["module","exports","baseUrl","console","log","process","create","newUser","a","axios","post","login","credentials","response","data","token","getAllActive","get","newGame","config","headers","Authorization","setToken","newToken","game","username","password","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","gameService","playerService","type","loginReducer","state","action","connect","props","useState","newUsername","setNewUsername","newName","setNewName","newPassword","setNewPassword","notification","setNotification","createAccount","event","preventDefault","name","userService","toast","info","position","POSITION","TOP_CENTER","error","Grid","Column","Segment","style","padding","Form","onSubmit","Header","as","color","Message","Input","label","placeholder","value","onChange","target","Button","fluid","size","setUsername","setPassword","handleLogin","exception","Group","inline","icon","iconPosition","FrontPage","columns","Row","Subheader","src","kobe","alt","maxWidth","maxHeight","games","location","center","lat","lng","zoom","maxZoom","dragging","TileLayer","attribution","url","map","Marker","key","id","long","Popup","onClick","joinGame","desc","logOut","removeItem","Menu","inverted","marginBottom","Item","gameReducer","concat","createGame","duration","setDuration","setDesc","maxParticipants","setmaxParticipants","createNewGame","durationMins","toggler","top","right","zIndex","marginTop","marginRight","MapPage","formVisible","setFormVisible","toggleVisibility","primary","ipLookUp","res","locationReducer","configure","initializeGames","stayLoggedIn","changeLocation","navigator","geolocation","getCurrentPosition","userLocation","coords","latitude","longitude","message","then","lon","initGames","keepUserLogged","setLocation","useEffect","loggedUserJSON","getItem","parse","Container","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbb7e962.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kobe.4b4fdbac.jpg\";","import axios from 'axios'\n\nlet baseUrl = ''\n\nconsole.log('envi', process.env.NODE_ENV)\n\nif(process.env.NODE_ENV === 'production') {\n  console.log('mentiin tänne')\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/users'\n\nconst create = async (newUser) => {\n  return await axios.post(`${baseUrl}${apiUrl}`, newUser)\n}\n\nexport default {\n  create\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nconst baseUrl = '/api/games'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAllActive = async () => {\n  const response = await axios.get(`${baseUrl}/active`)\n  return response.data\n}\n\nconst create = async (newGame) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newGame, config)\n  return response.data\n}\n\nexport default {\n  getAllActive,\n  create,\n  setToken\n}","import axios from 'axios'\n\nconst baseUrl = '/api/players'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (game) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  console.log('lähtetään', game)\n\n  const response = await axios.post(baseUrl, game, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  create\n}","import loginService from '../services/login'\nimport gameService from '../services/games'\nimport playerService from '../services/players'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'STAY_LOGGED_IN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      gameService.setToken(user.token)\n      playerService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedInUser')\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const stayLoggedIn = (user) => {\n  return async dispatch => {\n    gameService.setToken(user.token)\n    playerService.setToken(user.token)\n    dispatch({\n      type: 'STAY_LOGGED_IN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import React, { useState } from 'react'\nimport userService from '../../services/users'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/loginReducer'\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewAccountForm = (props) => {\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const createAccount = async (event) => {\n    event.preventDefault()\n    try {\n      const newUser = {\n        username: newUsername,\n        name: newName,\n        password: newPassword\n      }\n      await userService.create(newUser)\n      setNewUsername('')\n      setNewName('')\n      setNewPassword('')\n      setNotification('')\n      props.login(newUser.username, newUser.password)\n      toast.info(`Welcome ${newUser.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    } catch (exception) {\n      setNotification(exception.response.data.error)\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column>\n        <Segment style={{ padding: '20px' }}>\n          <Form onSubmit={createAccount}>\n            <Header as='h2' color='blue'>\n              Sign up\n            </Header>\n            {notification !== '' &&(\n              <Message>\n                {notification}\n              </Message>\n            )}\n            <Form.Input\n              // minLength={3}\n              // maxLength={15}\n              label=\"Username\"\n              placeholder=\"Username (3-15 characters)\"\n              value={newUsername}\n              name=\"username\"\n              onChange={({ target }) => setNewUsername(target.value)}\n            />\n            <Form.Input\n              // minLength={2}\n              // maxLength={30}\n              label=\"Name\"\n              placeholder=\"Name (2-30 characters)\"\n              value={newName}\n              name=\"name\"\n              onChange={({ target }) => setNewName(target.value)}\n            />\n            <Form.Input\n              // minLength={5}\n              label=\"Password\"\n              placeholder='Password (min. 5 characters)'\n              value={newPassword}\n              type='password'\n              name=\"password\"\n              onChange={({ target }) => setNewPassword(target.value)}\n            />\n\n            <Button color='blue' fluid size='large'>\n              Sign up\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default connect(null, { login })(NewAccountForm)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/loginReducer'\nimport { Button, Form, Message } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const exception = await props.login(username, password)\n\n    if (exception) {\n      setPassword('')\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Welcome ${username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <Form onSubmit={handleLogin}>\n      <Form.Group inline>\n        <Form.Input\n          icon='user'\n          iconPosition='left'\n          placeholder='Username'\n          name=\"username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <Form.Input\n          icon='lock'\n          iconPosition='left'\n          placeholder='Password'\n          type='password'\n          name=\"password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n        <Button color='blue'>\n          Login\n        </Button>\n      </Form.Group>\n      {notification !== '' && (\n        <Message>\n          {notification}\n        </Message>\n      )}\n    </Form>\n  )\n}\n\nexport default connect(null, { login })(LoginForm)","import React from 'react'\nimport { Grid, Header } from 'semantic-ui-react'\nimport NewAccountForm from './forms/NewAccountForm'\nimport LoginForm from './forms/LoginForm'\nimport kobe from '../kobe.jpg'\n\nconst FrontPage = () => {\n  return (\n    <Grid columns={2}>\n      <Grid.Row>\n        <Grid.Column>\n        </Grid.Column>\n        <Grid.Column style={{ padding: '50px' }}>\n          <LoginForm />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <Header size='huge'>\n            Pickupgame finder\n            test\n            <Header.Subheader>\n              Find local pickupgames and start balling\n            </Header.Subheader>\n          </Header>\n          <img src={kobe} alt=\"Basketball legend Kobe Bryant\" style={{maxWidth:'60%', maxHeight:'60%'}}/>\n        </Grid.Column>\n        <Grid.Column>\n          <NewAccountForm />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\n\n\n\n\nexport default FrontPage","import React from 'react'\nimport { connect } from 'react-redux'\nimport playerService from '../services/players'\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet'\n\nconst Map = (props) => {\n  const joinGame = (game) => {\n    playerService.create({ game })\n  }\n\n  return (\n    <LeafletMap\n      center={props.location === null ? [0, 0] : [props.location.lat, props.location.lng]}\n      zoom={props.location === null ? 2 : 13}\n      maxZoom={17}\n      dragging={true}\n    >\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n      />\n      {props.games.map(game =>\n        <Marker key={game.id} position={[game.location.lat, game.location.long]}>\n          <Popup>\n            <button onClick={() => joinGame(game.id)}>Join game</button>\n            {game.desc}\n          </Popup>\n        </Marker>\n      )}\n    </LeafletMap>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    games: state.games,\n    location: state.location\n  }\n}\n\nexport default connect(mapStateToProps)(Map)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu } from 'semantic-ui-react'\nimport { logOut } from '../reducers/loginReducer'\n\nconst Navigation = (props) => {\n  return (\n    <Menu inverted style={{ marginBottom: '0' }}>\n      <Menu.Item\n        name='home'\n      >\n        Home\n      </Menu.Item>\n      <Menu.Item\n        position='right'\n        name='settings'\n        onClick={() => props.logOut()}\n      >\n        Logout\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default connect(null, { logOut })(Navigation)","import gameService from '../services/games'\n\nconst gameReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_GAMES':\n      return action.data\n    case 'ADD_GAME':\n      return state.concat(action.data)\n    default:\n      return state\n  }\n}\n\nexport const initializeGames = () => {\n  return async dispatch => {\n    const games = await gameService.getAllActive()\n    dispatch({\n      type: 'INIT_GAMES',\n      data: games\n    })\n  }\n}\n\nexport const createGame = (game) => {\n  return async dispatch => {\n    try {\n      const newGame = await gameService.create(game)\n      dispatch({\n        type: 'ADD_GAME',\n        data: newGame\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default gameReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createGame } from '../../reducers/gameReducer'\nimport { Grid, Segment, Form, Header, Button, Message } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewGameForm = (props) => {\n  const [duration, setDuration] = useState('')\n  const [desc, setDesc] = useState('')\n  const [maxParticipants, setmaxParticipants] = useState(10)\n  const [notification, setNotification] = useState('')\n\n  const createNewGame = async (event) => {\n    event.preventDefault()\n    const newGame = {\n      durationMins: duration,\n      location: props.location,\n      desc,\n      maxParticipants\n    }\n    const exception = await props.createGame(newGame)\n\n    if (exception) {\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Succesfully created a game for ${maxParticipants} people in your location`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setDuration('')\n      setDesc('')\n      setmaxParticipants(10)\n      setNotification('')\n      props.toggler()\n    }\n  }\n\n  return (\n    <Grid style={{ position: 'absolute', top: '0', right: '0', zIndex: '999', marginTop: '35px', marginRight: '10px' }}>\n      <Grid.Column>\n        <Segment style={{ padding: '20px' }}>\n          <Button size='mini' onClick={props.toggler}>\n            x\n          </Button>\n          <Form onSubmit={createNewGame}>\n            <Header as='h2' color='blue'>\n              Start a game!\n            </Header>\n            {notification !== '' && (\n              <Message>\n                {notification}\n              </Message>\n            )}\n            <Form.Input\n              type='number'\n              // min={1}\n              // max={180}\n              label=\"Duration\"\n              placeholder=\"Duration in minutes (1-180 mins)\"\n              value={duration}\n              name=\"Duration\"\n              onChange={({ target }) => setDuration(target.value)}\n            />\n            <Form.Input\n              // minLength=\"5\"\n              // maxLength=\"140\"\n              label=\"Description\"\n              placeholder=\"Description (5-140 characters)\"\n              value={desc}\n              name=\"Description\"\n              onChange={({ target }) => setDesc(target.value)}\n            />\n            <Form.Input\n              type='number'\n              // min={1}\n              // max={30}\n              label=\"Maximum amount of participants\"\n              placeholder='Max amount of participants (1-30 participants)'\n              value={maxParticipants}\n              name=\"maxParticipants\"\n              onChange={({ target }) => setmaxParticipants(target.value)}\n            />\n\n            <Button color='blue' fluid size='large'>\n              Create a game\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location\n  }\n}\n\nexport default connect(mapStateToProps, { createGame })(NewGameForm)","import React, { useState } from 'react'\nimport Map from './Map'\nimport Navigation from './Navigation'\nimport NewGameForm from './forms/NewGameForm'\nimport { Button } from 'semantic-ui-react'\n\nconst MapPage = () => {\n  const [formVisible, setFormVisible] = useState(false)\n\n  const toggleVisibility = () => {\n    setFormVisible(!formVisible)\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <Map />\n      {formVisible && (\n        <NewGameForm toggler={toggleVisibility} />\n      )}\n      {!formVisible && (\n        <Button\n          primary\n          style={{ position: 'absolute', top: '50px', right: '10px', zIndex: '999' }}\n          onClick={toggleVisibility}\n        >\n          New Game\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default MapPage","import axios from 'axios'\n\nconst locationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOCATION':\n      return action.location\n    default:\n      return state\n  }\n}\n\nconst ipLookUp = async () => {\n  const res = await axios.get('http://ip-api.com/json')\n  return res.data\n}\n\nexport const changeLocation = () => {\n  return async dispatch => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      },\n      (message) => {\n        console.log('failed to get location', message)\n        const response = ipLookUp()\n        response.then(res => {\n          const userLocation = {\n            lat: res.lat,\n            lng: res.lon\n          }\n          dispatch({\n            type: 'CHANGE_LOCATION',\n            location: userLocation\n          })\n        })\n      })\n\n    } else {\n      console.log('geolocation not supported in this browser')\n      const response = ipLookUp()\n      response.then(res => {\n        const userLocation = {\n          lat: res.lat,\n          lng: res.lon\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      })\n    }\n  }\n}\n\nexport default locationReducer","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport FrontPage from './components/FrontPage'\nimport MapPage from './components/MapPage'\nimport { initializeGames } from './reducers/gameReducer'\nimport { stayLoggedIn } from './reducers/loginReducer'\nimport { changeLocation } from './reducers/locationReducer'\nimport { Container } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\ntoast.configure()\n\nconst App = (props) => {\n  const initGames = props.initializeGames\n  const keepUserLogged = props.stayLoggedIn\n  const setLocation = props.changeLocation\n\n  useEffect(() => {\n    initGames()\n  }, [initGames])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      keepUserLogged(user)\n    }\n  }, [keepUserLogged])\n\n  useEffect(() => {\n    setLocation()\n  }, [setLocation])\n\n  if (props.user === null) {\n    return (\n      <Container>\n        <FrontPage />\n      </Container>\n    )\n  }\n  return (\n    <div>\n      <MapPage />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { initializeGames, stayLoggedIn, changeLocation })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './reducers/gameReducer'\nimport loginReducer from './reducers/loginReducer'\nimport locationReducer from './reducers/locationReducer'\n\n\nconst reducer = combineReducers({\n  games: gameReducer,\n  user: loginReducer,\n  location: locationReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}