{"version":3,"sources":["resources/kobe.jpg","resources/bball.svg","resources/intro/welcome.png","resources/intro/findGames.png","resources/intro/joinGame.png","resources/intro/createGame.png","services/users.js","services/login.js","services/games.js","services/players.js","reducers/userReducer.js","components/FrontPage/NewAccountForm.js","components/FrontPage/LoginForm.js","components/FrontPage/FrontPage.js","components/MapPage/Markers/Game.js","components/MapPage/Markers/Markers.js","components/MapPage/MarkerInfo/GameInfo.js","components/MapPage/MarkerInfo/ClusterInfo.js","components/MapPage/MarkerInfo/MarkerInfo.js","reducers/colorSchemeReducer.js","components/NavigationBar.js","reducers/gameReducer.js","components/MapPage/NewGameForm.js","components/MapPage/Markers/NewGameLocation.js","components/MapPage/NoLocation.js","components/MapPage/Map.js","reducers/locationReducer.js","components/CarouselLarge.js","components/Intro.js","App.js","index.js"],"names":["module","exports","token","baseUrl","create","newUser","a","axios","post","update","updatedUser","config","headers","Authorization","put","id","response","data","setToken","newToken","login","credentials","getAllActive","get","newGame","game","username","password","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","gameService","playerService","userService","type","userReducer","state","action","showIntro","connect","props","useState","newUsername","setNewUsername","newName","setNewName","newPassword","setNewPassword","notification","setNotification","textColor","colorScheme","inputClass","segmentClass","createAccount","event","preventDefault","name","toast","info","position","POSITION","TOP_CENTER","error","Grid","Column","Segment","className","Form","onSubmit","Header","as","style","color","Message","placeholder","value","onChange","target","Button","fluid","size","setUsername","setPassword","handleLogin","exception","Group","inline","widths","FrontPage","Responsive","minWidth","inverted","minHeight","padding","vertical","Container","columns","marginTop","Row","fontWeight","fontSize","marginBottom","src","kobe","alt","maxWidth","maxHeight","textAlign","text","Subheader","Divider","horizontal","Game","cluster","zoom","properties","latitude","location","lat","longitude","long","onClick","bball","height","width","Markers","clusters","map","geometry","coordinates","key","point_count","GameInfo","gameInfo","setSelected","prevSelected","setPrevSelected","joinGame","backgroundColor","showPrevIcon","date","endTime","slice","time","Modal","defaultOpen","onClose","closeOnDimmerClick","closeIcon","Icon","link","Content","floated","primary","Description","owner","desc","participants","length","maxParticipants","List","bulleted","participant","Item","ClusterInfo","clusterInfo","supercluster","games","getLeaves","cardColor","i","Card","Meta","MarkerInfo","selectedCluster","changeColor","colorSchemeReducer","logOut","removeItem","navBarColor","Menu","Dropdown","item","gameReducer","concat","updatedGame","find","gameId","createGame","duration","setDuration","setDesc","setmaxParticipants","radioValue","setRadioValue","latestClick","setNewGameLocation","useEffect","closeForm","viewport","setFormVisible","setViewport","createNewGame","durationMins","newGameLocation","lng","setLatestClick","right","top","Radio","checked","toFixed","NewGameLocation","NoLocation","icon","warning","points","addPlayer","selected","formVisible","mapStyle","mapRef","useRef","mapBounds","current","getMap","getBounds","toArray","flat","useSupercluster","bounds","options","radius","maxZoom","updatedParticipants","updatedProperties","updatedSelected","warn","zIndex","screen","marginRight","bottom","overflow","getCursor","isDragging","ref","mapboxApiAccessToken","process","onViewportChange","click","lngLat","zoomLevel","Math","min","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","ipLookUp","res","locationReducer","CarouselLarge","index","Image","wrapped","welcome","href","findGames","this","closeModal","React","Component","WithStore","currentSlide","disableIntro","open","setOpen","basic","centered","naturalSlideWidth","naturalSlideHeight","totalSlides","configure","autoClose","hideProgressBar","initializeGames","stayLoggedIn","changeLocation","navigator","geolocation","getCurrentPosition","userLocation","coords","message","console","log","then","initGames","keepUserLogged","setLocation","loggedUserJSON","getItem","parse","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.689366ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kobe.4b4fdbac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bball.527662f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome.1ac2b16f.png\";","module.exports = __webpack_public_path__ + \"static/media/findGames.f2699377.png\";","module.exports = __webpack_public_path__ + \"static/media/joinGame.ff31d000.png\";","module.exports = __webpack_public_path__ + \"static/media/createGame.07381b68.png\";","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif (process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/users'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newUser) => {\n  return await axios.post(`${baseUrl}${apiUrl}`, newUser)\n}\n\nconst update = async (updatedUser) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}${apiUrl}/${updatedUser.id}`, updatedUser, config)\n  return response.data\n}\n\nexport default {\n  create,\n  update,\n  setToken\n}","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}${apiUrl}`, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/games'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAllActive = async () => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/active`)\n  return response.data\n}\n\nconst create = async (newGame) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, newGame, config)\n  return response.data\n}\n\nexport default {\n  getAllActive,\n  create,\n  setToken\n}","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/players'\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (game) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, game, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  create\n}","import loginService from '../services/login'\nimport gameService from '../services/games'\nimport playerService from '../services/players'\nimport userService from '../services/users'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'STAY_LOGGED_IN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    case 'DISABLE_INTRO':\n      return { ...state, showIntro: false }\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      gameService.setToken(user.token)\n      playerService.setToken(user.token)\n      userService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedInUser')\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const stayLoggedIn = (user) => {\n  return async dispatch => {\n    gameService.setToken(user.token)\n    playerService.setToken(user.token)\n    userService.setToken(user.token)\n    dispatch({\n      type: 'STAY_LOGGED_IN',\n      user\n    })\n  }\n}\n\nexport const disableIntro = (user) => {\n  return async dispatch => {\n    try {\n      const updatedUser = await userService.update({ ...user, showIntro: false })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(updatedUser))\n      dispatch({\n        type: 'DISABLE_INTRO'\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default userReducer","import React, { useState } from 'react'\nimport userService from '../../services/users'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/userReducer'\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewAccountForm = (props) => {\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDark' : ''\n\n  const createAccount = async (event) => {\n    event.preventDefault()\n    try {\n      const newUser = {\n        username: newUsername,\n        name: newName,\n        password: newPassword\n      }\n      await userService.create(newUser)\n      setNewUsername('')\n      setNewName('')\n      setNewPassword('')\n      setNotification('')\n      props.login(newUser.username, newUser.password)\n      toast.info(`Welcome ${newUser.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    } catch (exception) {\n      setNotification(exception.response.data.error)\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column>\n        <Segment className={segmentClass}>\n          <Form onSubmit={createAccount}>\n            <Header as='h2' style={{ color: textColor }}>\n              Sign up\n            </Header>\n            {notification !== '' && (\n              <Message>\n                {notification}\n              </Message>\n            )}\n            <div className='field'>\n              <label style={{ color: textColor }}>Username</label>\n              <div className='ui fluid input'>\n                <input\n                  className={inputClass}\n                  id='username'\n                  type='text'\n                  placeholder='Username (3-15 characters)'\n                  value={newUsername}\n                  onChange={({ target }) => setNewUsername(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: textColor }}>Name</label>\n              <div className='ui fluid input'>\n                <input\n                  className={inputClass}\n                  id='name'\n                  type='text'\n                  placeholder='Name (2-30 characters)'\n                  value={newName}\n                  onChange={({ target }) => setNewName(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: textColor }}>Password</label>\n              <div className='ui fluid input'>\n                <input\n                  className={inputClass}\n                  id='password'\n                  type='password'\n                  placeholder='Password (min. 5 characters)'\n                  value={newPassword}\n                  onChange={({ target }) => setNewPassword(target.value)}\n                />\n              </div>\n            </div>\n            <Button color='blue' fluid size='large' id='accountCreation-button'>\n              Sign up\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default connect(null, { login })(NewAccountForm)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/userReducer'\nimport { Button, Form, Message, Header } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const exception = await props.login(username, password)\n\n    if (exception) {\n      setPassword('')\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Welcome ${username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={handleLogin}\n    >\n      <Header\n        as='h2'\n        style={{ color: props.textColor }}\n      >\n        Login\n      </Header>\n      <Form.Group\n        inline\n        widths='equal'\n      >\n        <div\n          className='field'\n        >\n          <div\n            className='ui fluid input'\n          >\n            <input\n              className={inputClass}\n              id='login-username'\n              type='text'\n              placeholder='Username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n        </div>\n        <div\n          className='field'\n        >\n          <div\n            className='ui fluid input'\n          >\n            <input\n              className={inputClass}\n              id='login-password'\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n        </div>\n        <Button\n          color='blue'\n          id='login-button'\n        >\n          Login\n        </Button>\n      </Form.Group>\n      {notification !== '' && (\n        <Message>\n          {notification}\n        </Message>\n      )}\n    </Form>\n  )\n}\n\nexport default connect(null, { login })(LoginForm)","import React from 'react'\nimport { Grid, Header, Responsive, Divider, Container, Segment } from 'semantic-ui-react'\nimport NewAccountForm from './NewAccountForm'\nimport LoginForm from './LoginForm'\nimport kobe from '../../resources/kobe.jpg'\n\nconst FrontPage = ({ colorScheme }) => {\n  const textColor = colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = colorScheme === 'dark' ? 'segmentDark' : ''\n\n  return (\n    <div>\n      <Responsive minWidth={768}>\n        <Segment\n          inverted\n          style={{ minHeight: 600, padding: '1em 0em' }}\n          vertical\n        >\n          <Container>\n            <Grid columns={2} style={{ marginTop: '25px' }}>\n              <Grid.Row>\n                <Grid.Column>\n                </Grid.Column>\n                <Grid.Column>\n                  <LoginForm colorScheme={colorScheme} textColor={'white'} />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <Header\n              as='h1'\n              inverted\n              style={{\n                fontWeight: 'normal',\n                fontSize: '3em',\n                marginBottom: 0,\n                marginTop: '3em'\n              }}\n            >\n              Pickupgame finder\n            </Header>\n            <Header\n              as='h2'\n              inverted\n              style={{\n                fontSize: '1.5em',\n                fontWeight: 'normal',\n                marginTop: '1em'\n              }}\n            >\n              Find local pickupgames and start playing!<br /> Sign up below!\n            </Header>\n          </Container>\n        </Segment>\n        <Container>\n          <Grid columns={2}>\n            <Grid.Row style={{ marginTop: '100px' }}>\n              <Grid.Column>\n                <img src={kobe} alt=\"Basketball legend Kobe Bryant\" style={{ maxWidth: '65%', maxHeight: '65%' }} />\n              </Grid.Column>\n              <Grid.Column>\n                <NewAccountForm colorScheme={colorScheme} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </Responsive>\n      <Responsive maxWidth={767}>\n        <Segment\n          inverted\n          textAlign='center'\n          style={{ minHeight: 250, padding: '1em 0em' }}\n          vertical\n        >\n          <Container text>\n            <Header\n              as='h1'\n              inverted\n              style={{\n                fontWeight: 'normal',\n                marginBottom: 0,\n                marginTop: '2em'\n              }}\n            >\n              Pickupgame finder\n              <Header.Subheader\n                style={{\n                  fontWeight: 'normal',\n                  marginTop: '0.5em'\n                }}\n              >\n                Find local pickupgames and start playing!\n              </Header.Subheader>\n            </Header>\n          </Container>\n        </Segment>\n        <Container>\n          <Segment style={{ marginTop: '30px' }} className={segmentClass}>\n            <LoginForm colorScheme={colorScheme} textColor={colorScheme === 'dark' ? 'white' : 'black'} />\n          </Segment>\n          <Divider horizontal>\n            <p style={{ color: textColor }}>OR</p>\n          </Divider>\n          <NewAccountForm colorScheme={colorScheme} />\n        </Container>\n      </Responsive>\n    </div >\n  )\n}\n\nexport default FrontPage","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport bball from '../../../resources/bball.svg'\n\nconst Game = ({ cluster, zoom }) => {\n  const game = cluster.properties\n  return (\n\n    <Marker\n      latitude={game.location.lat}\n      longitude={game.location.long}\n    >\n      <div onClick={() => { zoom(cluster) }}>\n        <img src={bball} alt='basketballgame here' style={{ height: '25px', width: '25px' }} />\n      </div>\n    </Marker>\n  )\n}\n\nexport default Game","import React from 'react'\nimport Game from './Game'\nimport { Marker } from 'react-map-gl'\n\nconst Markers = ({ clusters, zoom }) => {\n  return (\n    clusters.map(cluster => {\n      const [longitude, latitude] = cluster.geometry.coordinates\n\n      if (cluster.properties.cluster) {\n        return (\n          <Marker\n            key={cluster.id}\n            latitude={latitude}\n            longitude={longitude}\n          >\n            <div onClick={() => zoom(cluster)} style={{ 'color': 'black', 'backgroundColor': '#cc5500', 'borderRadius': '50%', 'width': '25px', 'height': '25px', 'textAlign': 'center', 'lineHeight': '25px' }}>\n              {cluster.properties.point_count}\n            </div>\n          </Marker>\n        )\n      }\n\n      return (\n        <Game\n          key={cluster.properties.id}\n          cluster={cluster}\n          zoom={zoom}\n        />\n      )\n    })\n  )\n}\n\nexport default Markers","import React from 'react'\nimport { Modal, Icon, Header, List, Divider, Button } from 'semantic-ui-react'\n\nconst GameInfo = ({ gameInfo, setSelected, prevSelected, setPrevSelected, joinGame, colorScheme }) => {\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#141d26' : '',\n    inverted: colorScheme === 'dark'\n  }\n\n  const showPrevIcon = prevSelected !== null ? true : false\n  const date = gameInfo.endTime.slice(0, 10)\n  const time = gameInfo.endTime.slice(11, 16)\n\n  const goBack = () => {\n    setSelected(prevSelected)\n  }\n\n  const close = () => {\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal defaultOpen={true} onClose={close} closeOnDimmerClick={false} closeIcon>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor }}>\n        {showPrevIcon && (\n          <Icon inverted={style.inverted} link name='arrow left' onClick={goBack} />\n        )}\n      </Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        <Button floated='right' primary onClick={() => joinGame(gameInfo.id)}>\n          Join\n        </Button>\n        <Modal.Description>\n          <Header style={{ color: style.textColor }}>Game by {gameInfo.owner.username}</Header>\n          <p style={{ color: style.textColor }}>{gameInfo.desc}</p>\n          <p style={{ color: style.textColor }}>Participants: ({gameInfo.participants.length}/{gameInfo.maxParticipants})</p>\n          <List bulleted>\n            {gameInfo.participants.map(participant =>\n              <List.Item key={participant.id} style={{ color: style.textColor }}>\n                {participant.username}\n              </List.Item>\n            )}\n          </List>\n          <Divider />\n          <p style={{ color: style.textColor }}>Game ends at: {date} {time} GMT</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default GameInfo","import React from 'react'\nimport { Modal, Card } from 'semantic-ui-react'\n\nconst ClusterInfo = ({ clusterInfo, supercluster, setSelected, setPrevSelected, colorScheme }) => {\n  const games = supercluster.getLeaves(clusterInfo.id)\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#141d26' : '',\n    cardColor: colorScheme === 'dark' ? '#1c2836' : ''\n  }\n\n  const close = () => {\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal defaultOpen={true} onClose={close} closeOnDimmerClick={false} closeIcon>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor, color: style.textColor }}>Games in this location</Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        {games.map((game, i) =>\n          <Card style={{ backgroundColor: style.cardColor }} fluid onClick={() => { setPrevSelected(clusterInfo); setSelected(game) }} key={game.properties.id}>\n            <Card.Content>\n              <Card.Header style={{ color: style.textColor }}>\n                Game {i}\n              </Card.Header>\n              <Card.Meta style={{ color: style.textColor }}>\n                Created by {game.properties.owner.username}\n              </Card.Meta>\n              <Card.Description style={{ color: style.textColor }}>\n                {game.properties.desc}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default ClusterInfo","import React from 'react'\nimport GameInfo from './GameInfo'\nimport ClusterInfo from './ClusterInfo'\n\nconst MarkerInfo = ({ selectedCluster, prevSelected, setSelected, setPrevSelected, joinGame, supercluster, colorScheme }) => {\n  if (selectedCluster.properties.cluster) {\n    return (\n      <ClusterInfo\n        clusterInfo={selectedCluster}\n        supercluster={supercluster}\n        setSelected={setSelected}\n        setPrevSelected={setPrevSelected}\n        colorScheme={colorScheme}\n      />\n    )\n  } else {\n    return (\n      <GameInfo\n        gameInfo={selectedCluster.properties}\n        setSelected={setSelected}\n        prevSelected={prevSelected}\n        setPrevSelected={setPrevSelected}\n        joinGame={joinGame}\n        colorScheme={colorScheme}\n      />\n    )\n  }\n}\n\nexport default MarkerInfo","const colorSchemeReducer = (state = 'light', action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return action.colorScheme\n    default:\n      return state\n  }\n}\n\nexport const changeColor = (colorScheme) => {\n  window.localStorage.setItem('colorScheme', colorScheme)\n  return {\n    type: 'CHANGE_COLOR',\n    colorScheme\n  }\n}\n\nexport default colorSchemeReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown } from 'semantic-ui-react'\nimport { logOut } from '../reducers/userReducer'\nimport { changeColor } from '../reducers/colorSchemeReducer'\n\nconst Navigation = (props) => {\n\n  const toggleColor = () => {\n    const color = props.colorScheme === 'light' ? 'dark' : 'light'\n    props.changeColor(color)\n  }\n\n  const navBarColor = props.colorScheme === 'dark' ? '#141d26' : '#0E6EB8'\n\n  return (\n    <Menu style={{ backgroundColor: navBarColor }}>\n      <Menu.Item name='home' style={{ color: 'white' }}>\n        Home\n      </Menu.Item>\n      <Menu.Menu position='right'>\n        <Dropdown item style={{ color: 'white' }} text={props.user.username}>\n          <Dropdown.Menu style={{ backgroundColor: navBarColor }}>\n            <Dropdown.Item onClick={toggleColor}>\n              <p style={{ color: 'white' }}>\n                {props.colorScheme === 'light' ? 'Use Darkmode' : 'Use lightmode'}\n              </p>\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => props.logOut()} style={{ color: 'white' }}>\n              <p style={{ color: 'white' }}>\n                Logout\n              </p>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    colorScheme: state.colorScheme,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { logOut, changeColor })(Navigation)","import gameService from '../services/games'\n\nconst gameReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_GAMES':\n      return action.data\n    case 'ADD_GAME':\n      return state.concat(action.data)\n    case 'ADD_PLAYER': {\n      const updatedGame = state.find(game => game.id === action.gameId)\n      updatedGame.participants = updatedGame.participants.concat(action.user)\n      return state.map(game => game.id === action.gameId ? updatedGame : game)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeGames = () => {\n  return async dispatch => {\n    const games = await gameService.getAllActive()\n    dispatch({\n      type: 'INIT_GAMES',\n      data: games\n    })\n  }\n}\n\nexport const addPlayer = (user, gameId) => {\n  return {\n    type: 'ADD_PLAYER',\n    user,\n    gameId\n  }\n}\n\nexport const createGame = (game) => {\n  return async dispatch => {\n    try {\n      const newGame = await gameService.create(game)\n      dispatch({\n        type: 'ADD_GAME',\n        data: newGame\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default gameReducer","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { createGame } from '../../reducers/gameReducer'\nimport { Segment, Form, Header, Button, Message, Icon } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewGameForm = (props) => {\n  const [duration, setDuration] = useState('')\n  const [desc, setDesc] = useState('')\n  const [maxParticipants, setmaxParticipants] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDarkest' : ''\n\n  const radioValue = props.radioValue\n  const setRadioValue = props.setRadioValue\n  const location = props.location\n  const latestClick = props.latestClick\n  const setNewGameLocation = props.setNewGameLocation\n\n  useEffect(() => {\n    const selectedLocation = radioValue === 'curr' ? location : latestClick\n    setNewGameLocation(selectedLocation)\n  }, [latestClick, location, setNewGameLocation, radioValue])\n\n  const closeForm = () => {\n    if (props.viewport) {\n      props.setFormVisible(false)\n      props.setViewport({ ...props.viewport, height: '100vh' })\n    } else {\n      props.setFormVisible(false)\n    }\n  }\n\n  const createNewGame = async (event) => {\n    event.preventDefault()\n    const newGame = {\n      durationMins: duration,\n      location: props.newGameLocation,\n      desc,\n      maxParticipants\n    }\n    const exception = await props.createGame(newGame)\n\n    if (exception) {\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Created a game for ${maxParticipants} players!`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setDuration('')\n      setDesc('')\n      setmaxParticipants(10)\n      setNotification('')\n      setRadioValue('curr')\n      props.setNewGameLocation({ lat: 0, lng: 0 })\n      props.setLatestClick({ lat: 0, lng: 0 })\n      closeForm()\n    }\n  }\n\n  return (\n    <Segment className={segmentClass}>\n      <Icon\n        name='close'\n        size='large'\n        inverted={props.colorScheme === 'dark'}\n        style={{ position: 'absolute', right: '0', top: '1' }}\n        onClick={closeForm}\n      />\n      <Form onSubmit={createNewGame}>\n        <Header as='h2' style={{ color: textColor }}>\n          Start a game!\n        </Header>\n        {notification !== '' && (\n          <Message>\n            {notification}\n          </Message>\n        )}\n        <Header as='h4' style={{ color: textColor }}>Location</Header>\n        <Form.Group inline>\n          <Form.Radio\n            value='select'\n            checked={radioValue === 'select'}\n            onChange={() => setRadioValue('select')}\n          />\n          <label style={{ color: textColor }}>Select from map</label>\n          <Form.Radio\n            value='curr'\n            checked={radioValue === 'curr'}\n            onChange={() => setRadioValue('curr')}\n          />\n          <label style={{ color: textColor }}>Use your location</label>\n        </Form.Group>\n        <p style={{ color: textColor }}>lat: {props.newGameLocation.lat.toFixed(4)}</p>\n        <p style={{ color: textColor }}>long: {props.newGameLocation.lng.toFixed(4)}</p>\n        <div className='field'>\n          <Header as='h4' style={{ color: textColor }}>Duration</Header>\n          <div className='ui fluid input'>\n            <input\n              id='duration'\n              className={inputClass}\n              type='number'\n              placeholder='Duration in mins (1-180)'\n              value={duration}\n              onChange={({ target }) => setDuration(target.value)}\n            />\n          </div>\n        </div>\n        <div className='field'>\n          <Header as='h4' style={{ color: textColor }}>Description</Header>\n          <div className='ui fluid input'>\n            <input\n              id='description'\n              className={inputClass}\n              type='text'\n              placeholder='Description (5-140 chars)'\n              value={desc}\n              onChange={({ target }) => setDesc(target.value)}\n            />\n          </div>\n        </div>\n        <div className='field'>\n          <Header as='h4' style={{ color: textColor }}>Maximum Players</Header>\n          <div className='ui fluid input'>\n            <input\n              id='participants'\n              className={inputClass}\n              type='number'\n              placeholder='Max amount of participants (1-30)'\n              value={maxParticipants}\n              onChange={({ target }) => setmaxParticipants(target.value)}\n            />\n          </div>\n        </div>\n        <Button color='blue' fluid size='large' id='gamecreation-button'>\n          Create a game\n        </Button>\n      </Form>\n    </Segment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { createGame })(NewGameForm)","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport { Icon } from 'semantic-ui-react'\n\n\nconst NewGameLocation = ({ location }) => (\n  <Marker\n    latitude={location.lat}\n    longitude={location.lng}\n  >\n    <Icon\n      name='map marker alternate'\n      color='red'\n      size='big'\n    />\n  </Marker>\n)\n\nexport default NewGameLocation","import React from 'react'\nimport { Container, Message, Icon } from 'semantic-ui-react'\n\nconst NoLocation = () => (\n  <Container>\n    <Message icon warning>\n      <Icon name='location arrow' />\n      <Message.Content>\n        <Message.Header>Pls, give location</Message.Header>\n        Please accept or deny the use of your location to continue using the app\n      </Message.Content>\n    </Message>\n  </Container>\n)\n\nexport default NoLocation","import React, { useState, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport playerService from '../../services/players'\nimport ReactMapGL, { FlyToInterpolator } from 'react-map-gl'\nimport useSupercluster from 'use-supercluster'\nimport Markers from './Markers/Markers'\nimport MarkerInfo from './MarkerInfo/MarkerInfo'\nimport Navigation from '../NavigationBar'\nimport NewGameForm from './NewGameForm'\nimport NewGameLocation from './Markers/NewGameLocation'\nimport NoLocation from './NoLocation'\nimport { toast } from 'react-toastify'\nimport { addPlayer } from '../../reducers/gameReducer'\nimport { Responsive, Grid, Button } from 'semantic-ui-react'\n\nconst Map = (props) => {\n  const [viewport, setViewport] = useState({})\n  const [selected, setSelected] = useState(null)\n  const [prevSelected, setPrevSelected] = useState(null)\n  const [latestClick, setLatestClick] = useState({ lat: 0, lng: 0 })\n  const [formVisible, setFormVisible] = useState(false)\n  const [newGameLocation, setNewGameLocation] = useState({ lat: 0, lng: 0 })\n  const [radioValue, setRadioValue] = useState('curr')\n\n  const mapStyle = props.colorScheme === 'dark' ? 'mapbox://styles/ogrousu/ck6g74as70kw51io8h0ceo6h3' : 'mapbox://styles/ogrousu/ckae1dzbv0fvc1ilbhpvgy23t'\n\n  useEffect(() => {\n    //after user location is fetched, we initialize the map\n    setViewport({\n      latitude: props.location === null ? 0 : props.location.lat,\n      longitude: props.location === null ? 0 : props.location.lng,\n      zoom: props.location === null ? 0 : 12,\n      height: '100vh',\n      width: '100vw'\n    })\n  }, [props.location])\n\n  //boundaries of map for supercluster\n  const mapRef = useRef()\n  const mapBounds = mapRef.current ? mapRef.current.getMap().getBounds().toArray().flat() : null\n\n  //get game clusters from supercluster\n  const { clusters, supercluster } = useSupercluster({\n    points: props.points,\n    zoom: viewport.zoom,\n    bounds: mapBounds,\n    options: { radius: 30, maxZoom: 15 }\n  })\n\n  const joinGame = async (game) => {\n    try {\n      const response = await playerService.create({ game })\n      toast.info('Joined the game successfully', {\n        position: toast.POSITION.TOP_CENTER\n      })\n      props.addPlayer(response.user, response.game)\n\n      const updatedParticipants = selected.properties.participants.concat(response.user)\n      const updatedProperties = { ...selected.properties, participants: updatedParticipants }\n      const updatedSelected = {\n        geometry: selected.geometry,\n        properties: updatedProperties,\n        type: selected.type\n      }\n      setSelected(updatedSelected)\n    } catch (exception) {\n      toast.warn(exception.response.data.error, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  const zoom = (cluster) => {\n    //if no id, we are zooming fully to a single game, otherwise we are zooming\n    //until the cluster would break into multiple games or full zoom if they are too close to separate\n    const zoomLevel = !cluster.id ? 15 : Math.min(supercluster.getClusterExpansionZoom(cluster.id), 15)\n    const [longitude, latitude] = cluster.geometry.coordinates\n    setSelected(cluster)\n\n    setViewport({\n      ...viewport,\n      latitude,\n      longitude,\n      zoom: zoomLevel,\n      transitionInterpolator: new FlyToInterpolator({\n        speed: 1\n      }),\n      transitionDuration: 'auto'\n    })\n  }\n\n  const mapClick = (click) => {\n    if (radioValue === 'select' && formVisible) {\n      setLatestClick({ lat: click.lngLat[1], lng: click.lngLat[0] })\n    }\n  }\n\n  const getCursorStyle = ({ isDragging }) => {\n    if (radioValue === 'select' && formVisible) {\n      return 'crosshair'\n    }\n    return isDragging ? 'grabbing' : 'grab'\n  }\n\n  const openForm = () => {\n    if (window.screen.width > 767) {\n      setFormVisible(true)\n    } else {\n      setFormVisible(true)\n      setViewport({ ...viewport, height: '50vh' })\n    }\n  }\n\n  if (props.location === null) {\n    return (\n      <NoLocation />\n    )\n  }\n\n  return (\n    <div>\n      {!formVisible && (\n        <Button\n          primary\n          style={{ position: 'absolute', top: '50px', right: '10px', zIndex: '9' }}\n          onClick={openForm}\n        >\n          New Game\n        </Button>\n      )\n      }\n      {formVisible && (\n        <div>\n          <Responsive minWidth={768}>\n            <Grid style={{ position: 'absolute', top: '0', right: '0', marginTop: '35px', marginRight: '10px', zIndex: '9' }}>\n              <Grid.Column>\n                <NewGameForm\n                  latestClick={latestClick}\n                  setLatestClick={setLatestClick}\n                  setFormVisible={setFormVisible}\n                  newGameLocation={newGameLocation}\n                  setNewGameLocation={setNewGameLocation}\n                  radioValue={radioValue}\n                  setRadioValue={setRadioValue}\n                />\n              </Grid.Column>\n            </Grid>\n          </Responsive>\n\n          <Responsive maxWidth={767}>\n            <div style={{ position: 'fixed', bottom: '0', width: '100%', maxHeight: '50vh', overflow: 'auto', zIndex: '9' }}>\n              <NewGameForm\n                latestClick={latestClick}\n                setLatestClick={setLatestClick}\n                setFormVisible={setFormVisible}\n                newGameLocation={newGameLocation}\n                setNewGameLocation={setNewGameLocation}\n                radioValue={radioValue}\n                setRadioValue={setRadioValue}\n                viewport={viewport}\n                setViewport={setViewport}\n              />\n            </div>\n          </Responsive>\n        </div>\n      )}\n\n      <ReactMapGL\n        getCursor={getCursorStyle}\n        maxZoom={15}\n        ref={mapRef}\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        mapStyle={mapStyle}\n        onViewportChange={viewport => {\n          setViewport(viewport)\n        }}\n        onClick={mapClick}\n      >\n        <Navigation />\n        {formVisible && (\n          <NewGameLocation location={newGameLocation} />\n        )}\n        <Markers clusters={clusters} zoom={zoom} />\n        {selected && (\n          <MarkerInfo\n            selectedCluster={selected}\n            prevSelected={prevSelected}\n            setSelected={setSelected}\n            setPrevSelected={setPrevSelected}\n            joinGame={joinGame}\n            supercluster={supercluster}\n            colorScheme={props.colorScheme}\n          />\n        )}\n      </ReactMapGL>\n    </div >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  //modify game data to GeoJSON for supercluster\n  const points = state.games.map(game => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      ...game\n    },\n    geometry: {\n      type: 'Point',\n      coordinates: [\n        game.location.long,\n        game.location.lat\n      ]\n    }\n  }))\n\n  return {\n    points,\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { addPlayer })(Map)","import axios from 'axios'\n\nconst locationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOCATION':\n      return action.location\n    default:\n      return state\n  }\n}\n\nconst ipLookUp = async () => {\n  const res = await axios.get('https://ipapi.co/json/')\n  return res.data\n}\n\nexport const changeLocation = () => {\n  return async dispatch => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      },\n      (message) => {\n        console.log('failed to get location', message)\n        const response = ipLookUp()\n        response.then(res => {\n          console.log('response', res)\n          const userLocation = {\n            lat: res.latitude,\n            lng: res.longitude\n          }\n          dispatch({\n            type: 'CHANGE_LOCATION',\n            location: userLocation\n          })\n        })\n      })\n\n    } else {\n      console.log('geolocation not supported in this browser')\n      const response = ipLookUp()\n      response.then(res => {\n        const userLocation = {\n          lat: res.latitude,\n          lng: res.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      })\n    }\n  }\n}\n\nexport default locationReducer","import React from 'react'\nimport { WithStore, Slider, Slide, ButtonNext } from 'pure-react-carousel'\nimport { Image, Icon, Button } from 'semantic-ui-react'\nimport welcome from '../resources/intro/welcome.png'\nimport findGames from '../resources/intro/findGames.png'\nimport joinGame from '../resources/intro/joinGame.png'\nimport createGame from '../resources/intro/createGame.png'\n\nclass CarouselLarge extends React.Component {\n  render() {\n    return (\n      <div>\n        <Slider>\n          <Slide index={0}>\n            <Image\n              wrapped\n              src={welcome}\n              as='a'\n              href='http://www.freepik.com'\n            />\n            <p>Designed by upklyak</p>\n          </Slide>\n          <Slide index={1}>\n            <Image wrapped src={findGames} />\n          </Slide>\n          <Slide index={2}>\n            <Image wrapped src={joinGame} />\n          </Slide>\n          <Slide index={3}>\n            <Image wrapped src={createGame} />\n          </Slide>\n        </Slider>\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          {this.props.current < 3 && (\n            <ButtonNext className='ui massive icon circular basic inverted button'>\n              <Icon name='arrow right' />\n            </ButtonNext>\n          )}\n          {this.props.current === 3 && (\n            <Button\n              className='ui massive icon green basic circular inverted'\n              onClick={this.props.closeModal}\n            >\n              <Icon name='check' />\n            </Button>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WithStore(CarouselLarge, state => ({\n  current: state.currentSlide\n}))","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Modal } from 'semantic-ui-react'\nimport { CarouselProvider } from 'pure-react-carousel'\nimport 'pure-react-carousel/dist/react-carousel.es.css'\nimport CarouselLarge from './CarouselLarge'\nimport { disableIntro } from '../reducers/userReducer'\n\nconst Intro = ({ user, disableIntro }) => {\n  const [open, setOpen] = useState(true)\n\n  const closeModal = async () => {\n    setOpen(false)\n    disableIntro(user)\n  }\n\n  return (\n    <Modal\n      basic\n      open={open}\n      centered={false}\n      closeOnDimmerClick={false}\n    >\n      <CarouselProvider\n        naturalSlideWidth={1}\n        naturalSlideHeight={0.6}\n        totalSlides={4}\n      >\n        <CarouselLarge closeModal={closeModal} />\n      </CarouselProvider>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { disableIntro })(Intro)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport FrontPage from './components/FrontPage/FrontPage'\nimport Map from './components/MapPage/Map'\nimport { initializeGames } from './reducers/gameReducer'\nimport { stayLoggedIn } from './reducers/userReducer'\nimport { changeLocation } from './reducers/locationReducer'\nimport { changeColor } from './reducers/colorSchemeReducer'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.css'\nimport Intro from './components/Intro'\n\ntoast.configure({\n  autoClose: 3500,\n  hideProgressBar: true\n})\n\nconst App = (props) => {\n  const initGames = props.initializeGames\n  const keepUserLogged = props.stayLoggedIn\n  const setLocation = props.changeLocation\n  const changeColor = props.changeColor\n\n  console.log('useri', props.user)\n\n  useEffect(() => {\n    initGames()\n  }, [initGames])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      keepUserLogged(user)\n    }\n  }, [keepUserLogged])\n\n  useEffect(() => {\n    setLocation()\n  }, [setLocation])\n\n  useEffect(() => {\n    const colorScheme = window.localStorage.getItem('colorScheme')\n    if (colorScheme) {\n      changeColor(colorScheme)\n    } else {\n      changeColor('light')\n    }\n  }, [changeColor])\n\n  if (props.user === null) {\n    return (\n      <div className={props.colorScheme === 'dark' ? 'bodyDark' : 'bodyLight'}>\n        <FrontPage colorScheme={props.colorScheme} />\n      </div>\n    )\n  }\n  return (\n    <div className={props.colorScheme === 'dark' ? 'bodyDark' : 'bodyLight'}>\n      {props.user.showIntro && (\n        <Intro />\n      )}\n      {!props.user.showIntro && (\n        <Map />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { initializeGames, stayLoggedIn, changeLocation, changeColor })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './reducers/gameReducer'\nimport userReducer from './reducers/userReducer'\nimport locationReducer from './reducers/locationReducer'\nimport colorSchemeReducer from './reducers/colorSchemeReducer'\n\n// used colors:\n// darkest: #141d26\n// mid: #1c2836\n// lightest: #243447\n\nconst reducer = combineReducers({\n  games: gameReducer,\n  user: userReducer,\n  location: locationReducer,\n  colorScheme: colorSchemeReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}