{"version":3,"sources":["resources/kobe.jpg","resources/bball.svg","resources/intro/welcome.png","resources/intro/findGames.png","resources/intro/joinGame.png","resources/intro/createGame.png","resources/placeholderprofilepic.png","services/users.js","services/login.js","services/games.js","services/players.js","reducers/userReducer.js","components/FormField.js","components/FrontPage/NewAccountForm.js","components/FrontPage/LoginForm.js","components/FrontPage/FrontPage.js","components/MapPage/Markers/Game.js","components/MapPage/Markers/Markers.js","components/MapPage/MarkerInfo/GameInfo.js","components/MapPage/MarkerInfo/ClusterInfo.js","components/MapPage/MarkerInfo/MarkerInfo.js","components/NavigationBar.js","reducers/gameReducer.js","components/MapPage/NewGameForm.js","components/MapPage/Markers/NewGameLocation.js","components/MapPage/NoLocation.js","components/MapPage/Map.js","reducers/locationReducer.js","reducers/colorSchemeReducer.js","components/Intro/CarouselLarge.js","components/Intro/Intro.js","components/Profile/Profile.js","App.js","index.js"],"names":["module","exports","token","baseUrl","create","newUser","a","axios","post","update","updatedUser","config","headers","Authorization","put","id","response","data","setToken","newToken","login","credentials","getAllActive","get","newGame","getByOwner","game","getByUser","username","password","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","gameService","playerService","userService","type","userReducer","state","action","showIntro","TextInput","label","textColor","inputClass","props","useField","field","meta","className","htmlFor","name","style","color","touched","error","connect","colorScheme","segmentClass","createAccount","values","setSubmitting","setFieldError","toast","info","position","POSITION","TOP_CENTER","includes","Grid","Column","Segment","Header","as","initialValues","validationSchema","yup","min","max","required","onSubmit","placeholder","Button","primary","fluid","loading","isSubmitting","disabled","size","useState","notification","setNotification","handleLogin","exception","Group","inline","widths","Message","FrontPage","Responsive","minWidth","inverted","minHeight","padding","vertical","Container","columns","marginTop","Row","fontWeight","fontSize","marginBottom","src","kobe","alt","maxWidth","maxHeight","textAlign","text","Subheader","Divider","horizontal","Game","cluster","zoom","properties","latitude","location","lat","longitude","long","onClick","bball","height","width","Markers","clusters","map","geometry","coordinates","key","point_count","GameInfo","gameInfo","setSelected","prevSelected","setPrevSelected","joinGame","modalOpen","setModalOpen","backgroundColor","showPrevIcon","date","endTime","slice","time","Modal","open","onClose","Icon","link","Content","floated","Description","owner","desc","participants","length","maxParticipants","List","bulleted","participant","Item","ClusterInfo","clusterInfo","supercluster","games","getLeaves","i","Card","Meta","MarkerInfo","selectedCluster","logOut","removeItem","navBarColor","Menu","borderless","to","Dropdown","item","gameReducer","concat","updatedGame","find","gameId","createGame","radioValue","setRadioValue","latestClick","setNewGameLocation","useEffect","closeForm","viewport","setFormVisible","setViewport","createNewGame","durationMins","duration","newGameLocation","description","lng","setLatestClick","console","log","right","top","zIndex","integer","formikProps","Radio","value","checked","onChange","toFixed","NewGameLocation","NoLocation","icon","warning","points","addPlayer","selected","formVisible","mapStyle","mapRef","useRef","mapBounds","current","getMap","getBounds","toArray","flat","useSupercluster","bounds","options","radius","maxZoom","updatedParticipants","updatedProperties","updatedSelected","warn","screen","marginRight","bottom","overflow","getCursor","isDragging","ref","mapboxApiAccessToken","process","onViewportChange","click","lngLat","zoomLevel","Math","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","ipLookUp","res","locationReducer","changeColor","colorSchemeReducer","CarouselLarge","index","Image","wrapped","welcome","href","findGames","this","closeModal","React","Component","WithStore","currentSlide","disableIntro","setOpen","basic","centered","closeOnDimmerClick","naturalSlideWidth","naturalSlideHeight","totalSlides","active","setActive","createdGames","setCreatedGames","participated","setParticipated","cardColor","created","reverse","fetchData","NavigationBar","profilepic","circular","toggle","pointing","secondary","configure","autoClose","hideProgressBar","initializeGames","stayLoggedIn","changeLocation","navigator","geolocation","getCurrentPosition","userLocation","coords","message","then","initGames","keepUserLogged","setLocation","loggedUserJSON","getItem","parse","document","body","classList","add","remove","basename","path","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cd9d3b1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kobe.4b4fdbac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bball.527662f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome.1ac2b16f.png\";","module.exports = __webpack_public_path__ + \"static/media/findGames.f2699377.png\";","module.exports = __webpack_public_path__ + \"static/media/joinGame.ff31d000.png\";","module.exports = __webpack_public_path__ + \"static/media/createGame.07381b68.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholderprofilepic.f31f5f98.png\";","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif (process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/users'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newUser) => {\n  return await axios.post(`${baseUrl}${apiUrl}`, newUser)\n}\n\nconst update = async (updatedUser) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}${apiUrl}/${updatedUser.id}`, updatedUser, config)\n  return response.data\n}\n\nexport default {\n  create,\n  update,\n  setToken\n}","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}${apiUrl}`, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/games'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAllActive = async () => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/active`)\n  return response.data\n}\n\nconst create = async (newGame) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, newGame, config)\n  return response.data\n}\n\nconst getByOwner = async (id) => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/owner/${id}`)\n  return response.data\n}\n\nexport default {\n  getAllActive,\n  create,\n  getByOwner,\n  setToken\n}","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/players'\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (game) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, game, config)\n  return response.data\n}\n\nconst getByUser = async(id) => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/user/${id}`)\n  return response.data\n}\n\nexport default {\n  setToken,\n  create,\n  getByUser\n}","import loginService from '../services/login'\nimport gameService from '../services/games'\nimport playerService from '../services/players'\nimport userService from '../services/users'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'STAY_LOGGED_IN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    case 'DISABLE_INTRO':\n      return { ...state, showIntro: false }\n    case '':\n      return action.updatedUser\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      gameService.setToken(user.token)\n      playerService.setToken(user.token)\n      userService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedInUser')\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const stayLoggedIn = (user) => {\n  return async dispatch => {\n    gameService.setToken(user.token)\n    playerService.setToken(user.token)\n    userService.setToken(user.token)\n    dispatch({\n      type: 'STAY_LOGGED_IN',\n      user\n    })\n  }\n}\n\nexport const disableIntro = (user) => {\n  return async dispatch => {\n    try {\n      const updatedUser = await userService.update({ ...user, showIntro: false })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(updatedUser))\n      dispatch({\n        type: 'DISABLE_INTRO'\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const updateUser = (userUpdatedInfo) => {\n  return async dispatch => {\n    try {\n      const updatedUser = await userService.update(userUpdatedInfo)\n      console.log('päivitetty', updatedUser)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(updatedUser))\n      gameService.setToken(updatedUser.token)\n      playerService.setToken(updatedUser.token)\n      userService.setToken(updatedUser.token)\n      dispatch({\n        type: 'UPDATE_USER',\n        updatedUser\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default userReducer","import React from 'react'\nimport { useField } from 'formik'\n\nexport const TextInput = ({ label, textColor, inputClass, ...props }) => {\n  const [field, meta] = useField(props)\n  return (\n    <div className='field'>\n      {label && (\n        <label htmlFor={props.id || props.name} style={{ color: textColor }}>{label}</label>\n      )}\n      <div className='fluid ui input'>\n        <input className={inputClass} {...field} {...props} />\n      </div>\n      {meta.touched && meta.error ? (\n        <div style={{ color: 'red' }}>{meta.error}</div>\n      ) : ''}\n    </div>\n  )\n}","import React from 'react'\nimport userService from '../../services/users'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/userReducer'\nimport { Grid, Segment, Button, Header } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport { Formik, Form } from 'formik'\nimport * as yup from 'yup'\nimport { TextInput } from '../FormField'\n\nconst NewAccountForm = (props) => {\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDarkest' : ''\n\n  const createAccount = async (values, { setSubmitting, setFieldError }) => {\n    try {\n      const newUser = { ...values }\n      await userService.create(newUser)\n      props.login(newUser.username, newUser.password)\n      toast.info(`Welcome ${newUser.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setSubmitting(false)\n    } catch (exception) {\n      if (exception.response.data.error.includes('unique')) {\n        setFieldError('username', 'Username already taken')\n      }\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column>\n        <Segment className={segmentClass}>\n          <Header as='h2' style={{ color: textColor }}>\n            Sign up\n          </Header>\n          <Formik\n            initialValues={{ username: '', name: '', password: '' }}\n            validationSchema={\n              yup.object({\n                username: yup.string()\n                  .min(3, 'Must be at least 3 characters')\n                  .max(15, 'Must be 15 characters or less')\n                  .required(),\n                name: yup.string()\n                  .min(2, 'Must be at least 2 characters')\n                  .max(30, 'Must be 30 characters or less')\n                  .required(),\n                password: yup.string()\n                  .min(5, 'Must be at least 5 characters')\n                  .required()\n              })\n            }\n            onSubmit={createAccount}\n          >\n            {props => (\n              <Form className='ui form'>\n                <TextInput\n                  label='Username'\n                  name='username'\n                  placeholder='Username (3-15 characters)'\n                  type='text'\n                  inputClass={inputClass}\n                  textColor={textColor}\n                  id='username'\n                />\n                <TextInput\n                  label='Name'\n                  name='name'\n                  placeholder='Name (2-30 characters)'\n                  type='text'\n                  inputClass={inputClass}\n                  textColor={textColor}\n                  id='name'\n                />\n                <TextInput\n                  label='Password'\n                  name='password'\n                  placeholder='Password (min. 5 characters)'\n                  type='password'\n                  inputClass={inputClass}\n                  textColor={textColor}\n                  id='password'\n                />\n                <Button\n                  type='submit'\n                  primary\n                  fluid\n                  loading={props.isSubmitting}\n                  disabled={props.isSubmitting}\n                  size='large'\n                  id='accountCreation-button'\n                >\n                  Sign up\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Segment>\n      </Grid.Column>\n    </Grid >\n  )\n}\n\nexport default connect(null, { login })(NewAccountForm)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/userReducer'\nimport { Button, Message, Header, Form as SemanticForm } from 'semantic-ui-react'\nimport { Formik, Form } from 'formik'\nimport { toast } from 'react-toastify'\nimport { TextInput } from '../FormField'\n\n\nconst LoginForm = (props) => {\n  const [notification, setNotification] = useState('')\n\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const textColor = props.textColor\n\n  const handleLogin = async (values) => {\n    const exception = await props.login(values.username, values.password)\n    if (exception) {\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Welcome ${values.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '' }}\n      onSubmit={handleLogin}\n    >\n      {props => (\n        <Form className='ui form'>\n          <Header\n            as='h2'\n            style={{ color: textColor }}\n          >\n            Login\n          </Header>\n          <SemanticForm.Group inline widths='equal'>\n            <TextInput\n              name='username'\n              placeholder='Username'\n              type='text'\n              inputClass={inputClass}\n              textColor='white'\n              id='login-username'\n            />\n            <TextInput\n              name='password'\n              placeholder='Password'\n              type='password'\n              inputClass={inputClass}\n              textColor='white'\n              id='login-password'\n            />\n            <Button\n              type='submit'\n              primary\n              loading={props.isSubmitting}\n              id='login-button'\n            >\n              Login\n            </Button>\n          </SemanticForm.Group>\n          {notification !== '' && (\n            <Message>\n              {notification}\n            </Message>\n          )}\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default connect(null, { login })(LoginForm)","import React from 'react'\nimport { Grid, Header, Responsive, Divider, Container, Segment } from 'semantic-ui-react'\nimport NewAccountForm from './NewAccountForm'\nimport LoginForm from './LoginForm'\nimport kobe from '../../resources/kobe.jpg'\n\nconst FrontPage = ({ colorScheme }) => {\n  const textColor = colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = colorScheme === 'dark' ? 'segmentDarkest' : ''\n\n  return (\n    <div>\n      <Responsive minWidth={768}>\n        <Segment\n          inverted\n          style={{ minHeight: 600, padding: '1em 0em' }}\n          vertical\n        >\n          <Container>\n            <Grid columns={2} style={{ marginTop: '25px' }}>\n              <Grid.Row>\n                <Grid.Column>\n                </Grid.Column>\n                <Grid.Column>\n                  <LoginForm colorScheme={colorScheme} textColor={'white'} />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <Header\n              as='h1'\n              inverted\n              style={{\n                fontWeight: 'normal',\n                fontSize: '3em',\n                marginBottom: 0,\n                marginTop: '3em'\n              }}\n            >\n              Pickupgame finder\n            </Header>\n            <Header\n              as='h2'\n              inverted\n              style={{\n                fontSize: '1.5em',\n                fontWeight: 'normal',\n                marginTop: '1em'\n              }}\n            >\n              Find local pickupgames and start playing!<br /> Sign up below!\n            </Header>\n          </Container>\n        </Segment>\n        <Container>\n          <Grid columns={2}>\n            <Grid.Row style={{ marginTop: '100px' }}>\n              <Grid.Column>\n                <img src={kobe} alt=\"Basketball legend Kobe Bryant\" style={{ maxWidth: '65%', maxHeight: '65%' }} />\n              </Grid.Column>\n              <Grid.Column>\n                <NewAccountForm colorScheme={colorScheme} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </Responsive>\n      <Responsive maxWidth={767}>\n        <Segment\n          inverted\n          textAlign='center'\n          style={{ minHeight: 250, padding: '1em 0em' }}\n          vertical\n        >\n          <Container text>\n            <Header\n              as='h1'\n              inverted\n              style={{\n                fontWeight: 'normal',\n                marginBottom: 0,\n                marginTop: '2em'\n              }}\n            >\n              Pickupgame finder\n              <Header.Subheader\n                style={{\n                  fontWeight: 'normal',\n                  marginTop: '0.5em'\n                }}\n              >\n                Find local pickupgames and start playing!\n              </Header.Subheader>\n            </Header>\n          </Container>\n        </Segment>\n        <Container>\n          <Segment style={{ marginTop: '30px' }} className={segmentClass}>\n            <LoginForm colorScheme={colorScheme} textColor={colorScheme === 'dark' ? 'white' : 'black'} />\n          </Segment>\n          <Divider horizontal>\n            <p style={{ color: textColor }}>OR</p>\n          </Divider>\n          <NewAccountForm colorScheme={colorScheme} />\n        </Container>\n      </Responsive>\n    </div >\n  )\n}\n\nexport default FrontPage","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport bball from '../../../resources/bball.svg'\n\nconst Game = ({ cluster, zoom }) => {\n  const game = cluster.properties\n  return (\n\n    <Marker\n      latitude={game.location.lat}\n      longitude={game.location.long}\n    >\n      <div onClick={() => { zoom(cluster) }} id='game'>\n        <img src={bball} alt='basketballgame here' style={{ height: '25px', width: '25px' }} />\n      </div>\n    </Marker>\n  )\n}\n\nexport default Game","import React from 'react'\nimport Game from './Game'\nimport { Marker } from 'react-map-gl'\n\nconst Markers = ({ clusters, zoom }) => {\n  return (\n    clusters.map(cluster => {\n      const [longitude, latitude] = cluster.geometry.coordinates\n\n      if (cluster.properties.cluster) {\n        return (\n          <Marker\n            key={cluster.id}\n            latitude={latitude}\n            longitude={longitude}\n          >\n            <div onClick={() => zoom(cluster)} style={{ 'color': 'black', 'backgroundColor': '#cc5500', 'borderRadius': '50%', 'width': '25px', 'height': '25px', 'textAlign': 'center', 'lineHeight': '25px' }}>\n              {cluster.properties.point_count}\n            </div>\n          </Marker>\n        )\n      }\n\n      return (\n        <Game\n          key={cluster.properties.id}\n          cluster={cluster}\n          zoom={zoom}\n        />\n      )\n    })\n  )\n}\n\nexport default Markers","import React, { useState } from 'react'\nimport { Modal, Icon, Header, List, Divider, Button } from 'semantic-ui-react'\n\nconst GameInfo = ({ gameInfo, setSelected, prevSelected, setPrevSelected, joinGame, colorScheme }) => {\n  const [modalOpen, setModalOpen] = useState(true)\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#192430' : '',\n    inverted: colorScheme === 'dark'\n  }\n\n  const showPrevIcon = prevSelected !== null ? true : false\n  const date = gameInfo.endTime.slice(0, 10)\n  const time = gameInfo.endTime.slice(11, 16)\n\n  const goBack = () => {\n    setSelected(prevSelected)\n  }\n\n  const close = () => {\n    setModalOpen(false)\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal open={modalOpen} onClose={close}>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor }}>\n        {showPrevIcon && (\n          <Icon inverted={style.inverted} link name='arrow left' onClick={goBack} />\n        )}\n      </Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        <Button floated='right' primary onClick={() => joinGame(gameInfo.id)}>\n          Join\n        </Button>\n        <Modal.Description>\n          <Header style={{ color: style.textColor }}>Game by {gameInfo.owner.username}</Header>\n          <p style={{ color: style.textColor }}>{gameInfo.desc}</p>\n          <p style={{ color: style.textColor }}>Participants: ({gameInfo.participants.length}/{gameInfo.maxParticipants})</p>\n          <List bulleted>\n            {gameInfo.participants.map(participant =>\n              <List.Item key={participant.id} style={{ color: style.textColor }}>\n                {participant.username}\n              </List.Item>\n            )}\n          </List>\n          <Divider />\n          <p style={{ color: style.textColor }}>Game ends at: {date} {time} GMT</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default GameInfo","import React, { useState } from 'react'\nimport { Modal, Card } from 'semantic-ui-react'\n\nconst ClusterInfo = ({ clusterInfo, supercluster, setSelected, setPrevSelected, colorScheme }) => {\n  const [modalOpen, setModalOpen] = useState(true)\n  const games = supercluster.getLeaves(clusterInfo.id)\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#192430' : '',\n  }\n\n  const close = () => {\n    setModalOpen(false)\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal open={modalOpen} onClose={close}>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor, color: style.textColor }}>Games in this location</Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        {games.map((game, i) =>\n          <Card style={{ backgroundColor: style.backgroundColor }} fluid onClick={() => { setPrevSelected(clusterInfo); setSelected(game) }} key={game.properties.id}>\n            <Card.Content>\n              <Card.Header style={{ color: style.textColor }}>\n                Game {i}\n              </Card.Header>\n              <Card.Meta style={{ color: style.textColor }}>\n                Created by {game.properties.owner.username}\n              </Card.Meta>\n              <Card.Description style={{ color: style.textColor }}>\n                {game.properties.desc}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default ClusterInfo","import React from 'react'\nimport GameInfo from './GameInfo'\nimport ClusterInfo from './ClusterInfo'\n\nconst MarkerInfo = ({ selectedCluster, prevSelected, setSelected, setPrevSelected, joinGame, supercluster, colorScheme }) => {\n  if (selectedCluster.properties.cluster) {\n    return (\n      <ClusterInfo\n        clusterInfo={selectedCluster}\n        supercluster={supercluster}\n        setSelected={setSelected}\n        setPrevSelected={setPrevSelected}\n        colorScheme={colorScheme}\n      />\n    )\n  } else {\n    return (\n      <GameInfo\n        gameInfo={selectedCluster.properties}\n        setSelected={setSelected}\n        prevSelected={prevSelected}\n        setPrevSelected={setPrevSelected}\n        joinGame={joinGame}\n        colorScheme={colorScheme}\n      />\n    )\n  }\n}\n\nexport default MarkerInfo","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown } from 'semantic-ui-react'\nimport { logOut } from '../reducers/userReducer'\nimport { Link } from 'react-router-dom'\n\nconst Navigation = (props) => {\n  const navBarColor = props.colorScheme === 'dark' ? '#141d26' : '#0E6EB8'\n\n  return (\n    <Menu borderless size='large' style={{ backgroundColor: navBarColor }}>\n      <Menu.Item>\n        <Link to='/' style={{ color: 'white' }}>Home</Link>\n      </Menu.Item>\n      <Menu.Menu position='right'>\n        <Dropdown item style={{ color: 'white' }} text={props.user.username}>\n          <Dropdown.Menu style={{ backgroundColor: navBarColor }}>\n            <Dropdown.Item>\n              <Link to='profile' style={{ color: 'white' }}>Profile</Link>\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => props.logOut()} style={{ color: 'white' }}>\n              <p style={{ color: 'white' }}>\n                Logout\n              </p>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    colorScheme: state.colorScheme,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { logOut })(Navigation)","import gameService from '../services/games'\n\nconst gameReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_GAMES':\n      return action.data\n    case 'ADD_GAME':\n      return state.concat(action.data)\n    case 'ADD_PLAYER': {\n      const updatedGame = state.find(game => game.id === action.gameId)\n      updatedGame.participants = updatedGame.participants.concat(action.user)\n      return state.map(game => game.id === action.gameId ? updatedGame : game)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeGames = () => {\n  return async dispatch => {\n    const games = await gameService.getAllActive()\n    dispatch({\n      type: 'INIT_GAMES',\n      data: games\n    })\n  }\n}\n\nexport const addPlayer = (user, gameId) => {\n  return {\n    type: 'ADD_PLAYER',\n    user,\n    gameId\n  }\n}\n\nexport const createGame = (game) => {\n  return async dispatch => {\n    try {\n      const newGame = await gameService.create(game)\n      dispatch({\n        type: 'ADD_GAME',\n        data: newGame\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default gameReducer","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { createGame } from '../../reducers/gameReducer'\nimport { Segment, Form as SemanticForm, Header, Button, Icon } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport { Formik, Form } from 'formik'\nimport { TextInput } from '../FormField'\nimport * as yup from 'yup'\n\nconst NewGameForm = (props) => {\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDarkest' : ''\n\n  const radioValue = props.radioValue\n  const setRadioValue = props.setRadioValue\n  const location = props.location\n  const latestClick = props.latestClick\n  const setNewGameLocation = props.setNewGameLocation\n\n  useEffect(() => {\n    const selectedLocation = radioValue === 'curr' ? location : latestClick\n    setNewGameLocation(selectedLocation)\n  }, [latestClick, location, setNewGameLocation, radioValue])\n\n  const closeForm = () => {\n    if (props.viewport) {\n      props.setFormVisible(false)\n      props.setViewport({ ...props.viewport, height: '100vh' })\n    } else {\n      props.setFormVisible(false)\n    }\n  }\n\n  const createNewGame = async (values, { setSubmitting }) => {\n    const newGame = {\n      durationMins: values.duration,\n      location: props.newGameLocation,\n      desc: values.description,\n      maxParticipants: values.participants\n    }\n\n    try {\n      await props.createGame(newGame)\n      toast.info(`Created a game for ${values.participants} players!`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setSubmitting(false)\n      setRadioValue('curr')\n      props.setNewGameLocation({ lat: 0, lng: 0 })\n      props.setLatestClick({ lat: 0, lng: 0 })\n      closeForm()\n\n    } catch (exception) {\n      console.log('Exception', exception)\n    }\n  }\n\n  return (\n    <Segment className={segmentClass}>\n      <div style={{ position: 'absolute', right: '10px', top: '10px', zIndex: '10' }} onClick={closeForm}>\n        <Icon\n          name='close'\n          size='large'\n          inverted={props.colorScheme === 'dark'}\n        />\n      </div>\n      <Formik\n        initialValues={{ duration: '', description: '', participants: 10 }}\n        validationSchema={\n          yup.object({\n            duration: yup.number()\n              .integer()\n              .min(1, 'The game must go on for at least a minute')\n              .max(180, 'The game cannot be longer than 180 minutes')\n              .required(),\n            description: yup.string()\n              .min(5, 'Must be at least 5 characters')\n              .max(140, 'Must be 140 characters or less')\n              .required(),\n            participants: yup.number()\n              .required()\n              .integer()\n              .min(1, 'The game must have at least one player')\n              .max(30, 'The game cannot have more than 30 players')\n          })\n        }\n        onSubmit={createNewGame}\n      >\n        {formikProps => (\n          <Form className='ui form'>\n            <Header as='h2' style={{ color: textColor }}>\n              Start a game!\n            </Header>\n            <SemanticForm.Group inline>\n              <label style={{ color: textColor }}>Location</label>\n              <SemanticForm.Radio\n                value='select'\n                checked={radioValue === 'select'}\n                onChange={() => setRadioValue('select')}\n              />\n              <label style={{ color: textColor }}>Select from map</label>\n              <SemanticForm.Radio\n                value='curr'\n                checked={radioValue === 'curr'}\n                onChange={() => setRadioValue('curr')}\n              />\n              <label style={{ color: textColor }}>Your location</label>\n            </SemanticForm.Group>\n            <p style={{ color: textColor }}>lat: {props.newGameLocation.lat.toFixed(4)}</p>\n            <p style={{ color: textColor }}>long: {props.newGameLocation.lng.toFixed(4)}</p>\n            <TextInput\n              label='Duration'\n              name='duration'\n              placeholder='Duration in mins (1-180)'\n              type='number'\n              inputClass={inputClass}\n              textColor={textColor}\n              id='duration'\n            />\n            <TextInput\n              label='Description'\n              name='description'\n              placeholder='Description (5-140 chars)'\n              type='text'\n              inputClass={inputClass}\n              textColor={textColor}\n              id='description'\n            />\n            <TextInput\n              label='Maximum players'\n              name='participants'\n              placeholder='Max amount of participants (1-30)'\n              type='number'\n              inputClass={inputClass}\n              textColor={textColor}\n              id='participants'\n            />\n            <Button\n              type='submit'\n              primary\n              fluid\n              loading={formikProps.isSubmitting}\n              disabled={formikProps.isSubmitting}\n              size='large'\n              id='gamecreation-button'\n            >\n              Create a game\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { createGame })(NewGameForm)","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport { Icon } from 'semantic-ui-react'\n\n\nconst NewGameLocation = ({ location }) => (\n  <Marker\n    latitude={location.lat}\n    longitude={location.lng}\n  >\n    <Icon\n      name='map marker alternate'\n      color='red'\n      size='big'\n    />\n  </Marker>\n)\n\nexport default NewGameLocation","import React from 'react'\nimport { Container, Message, Icon } from 'semantic-ui-react'\n\nconst NoLocation = () => (\n  <Container>\n    <Message icon warning>\n      <Icon name='location arrow' />\n      <Message.Content>\n        <Message.Header>Pls, give location</Message.Header>\n        Please accept or deny the use of your location to continue using the app\n      </Message.Content>\n    </Message>\n  </Container>\n)\n\nexport default NoLocation","import React, { useState, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport playerService from '../../services/players'\nimport ReactMapGL, { FlyToInterpolator } from 'react-map-gl'\nimport useSupercluster from 'use-supercluster'\nimport Markers from './Markers/Markers'\nimport MarkerInfo from './MarkerInfo/MarkerInfo'\nimport Navigation from '../NavigationBar'\nimport NewGameForm from './NewGameForm'\nimport NewGameLocation from './Markers/NewGameLocation'\nimport NoLocation from './NoLocation'\nimport { toast } from 'react-toastify'\nimport { addPlayer } from '../../reducers/gameReducer'\nimport { Responsive, Grid, Button } from 'semantic-ui-react'\n\nconst Map = (props) => {\n  const [viewport, setViewport] = useState({})\n  const [selected, setSelected] = useState(null)\n  const [prevSelected, setPrevSelected] = useState(null)\n  const [latestClick, setLatestClick] = useState({ lat: 0, lng: 0 })\n  const [formVisible, setFormVisible] = useState(false)\n  const [newGameLocation, setNewGameLocation] = useState({ lat: 0, lng: 0 })\n  const [radioValue, setRadioValue] = useState('curr')\n\n  const mapStyle = props.colorScheme === 'dark' ? 'mapbox://styles/ogrousu/ck6g74as70kw51io8h0ceo6h3' : 'mapbox://styles/ogrousu/ckae1dzbv0fvc1ilbhpvgy23t'\n\n  useEffect(() => {\n    //after user location is fetched, we initialize the map\n    setViewport({\n      latitude: props.location === null ? 0 : props.location.lat,\n      longitude: props.location === null ? 0 : props.location.lng,\n      zoom: props.location === null ? 0 : 12,\n      height: '100vh',\n      width: '100vw'\n    })\n  }, [props.location])\n\n  //boundaries of map for supercluster\n  const mapRef = useRef()\n  const mapBounds = mapRef.current ? mapRef.current.getMap().getBounds().toArray().flat() : null\n\n  //get game clusters from supercluster\n  const { clusters, supercluster } = useSupercluster({\n    points: props.points,\n    zoom: viewport.zoom,\n    bounds: mapBounds,\n    options: { radius: 30, maxZoom: 15 }\n  })\n\n  const joinGame = async (game) => {\n    try {\n      const response = await playerService.create({ game })\n      toast.info('Joined the game successfully', {\n        position: toast.POSITION.TOP_CENTER\n      })\n      props.addPlayer(response.user, response.game)\n\n      const updatedParticipants = selected.properties.participants.concat(response.user)\n      const updatedProperties = { ...selected.properties, participants: updatedParticipants }\n      const updatedSelected = {\n        geometry: selected.geometry,\n        properties: updatedProperties,\n        type: selected.type\n      }\n      setSelected(updatedSelected)\n    } catch (exception) {\n      toast.warn(exception.response.data.error, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  const zoom = (cluster) => {\n    //if no id, we are zooming fully to a single game, otherwise we are zooming\n    //until the cluster would break into multiple games or full zoom if they are too close to separate\n    const zoomLevel = !cluster.id ? 15 : Math.min(supercluster.getClusterExpansionZoom(cluster.id), 15)\n    const [longitude, latitude] = cluster.geometry.coordinates\n    setSelected(cluster)\n\n    setViewport({\n      ...viewport,\n      latitude,\n      longitude,\n      zoom: zoomLevel,\n      transitionInterpolator: new FlyToInterpolator({\n        speed: 1\n      }),\n      transitionDuration: 'auto'\n    })\n  }\n\n  const mapClick = (click) => {\n    if (radioValue === 'select' && formVisible) {\n      setLatestClick({ lat: click.lngLat[1], lng: click.lngLat[0] })\n    }\n  }\n\n  const getCursorStyle = ({ isDragging }) => {\n    if (radioValue === 'select' && formVisible) {\n      return 'crosshair'\n    }\n    return isDragging ? 'grabbing' : 'grab'\n  }\n\n  const openForm = () => {\n    if (window.screen.width > 767) {\n      setFormVisible(true)\n    } else {\n      setFormVisible(true)\n      setViewport({ ...viewport, height: '50vh' })\n    }\n  }\n\n  if (props.location === null) {\n    return (\n      <NoLocation />\n    )\n  }\n\n  return (\n    <div>\n      {!formVisible && (\n        <Button\n          primary\n          style={{ position: 'absolute', top: '70px', right: '10px', zIndex: '9' }}\n          onClick={openForm}\n        >\n          New Game\n        </Button>\n      )\n      }\n      {formVisible && (\n        <div>\n          <Responsive minWidth={768}>\n            <Grid style={{ position: 'absolute', top: '15px', right: '0', marginTop: '35px', marginRight: '10px', zIndex: '9' }}>\n              <Grid.Column>\n                <NewGameForm\n                  latestClick={latestClick}\n                  setLatestClick={setLatestClick}\n                  setFormVisible={setFormVisible}\n                  newGameLocation={newGameLocation}\n                  setNewGameLocation={setNewGameLocation}\n                  radioValue={radioValue}\n                  setRadioValue={setRadioValue}\n                />\n              </Grid.Column>\n            </Grid>\n          </Responsive>\n\n          <Responsive maxWidth={767}>\n            <div style={{ position: 'fixed', bottom: '0', width: '100%', maxHeight: '50vh', overflow: 'auto', zIndex: '9' }}>\n              <NewGameForm\n                latestClick={latestClick}\n                setLatestClick={setLatestClick}\n                setFormVisible={setFormVisible}\n                newGameLocation={newGameLocation}\n                setNewGameLocation={setNewGameLocation}\n                radioValue={radioValue}\n                setRadioValue={setRadioValue}\n                viewport={viewport}\n                setViewport={setViewport}\n              />\n            </div>\n          </Responsive>\n        </div>\n      )}\n\n      <ReactMapGL\n        getCursor={getCursorStyle}\n        maxZoom={15}\n        ref={mapRef}\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        mapStyle={mapStyle}\n        onViewportChange={viewport => {\n          setViewport(viewport)\n        }}\n        onClick={mapClick}\n      >\n        <Navigation />\n        {formVisible && (\n          <NewGameLocation location={newGameLocation} />\n        )}\n        <Markers clusters={clusters} zoom={zoom} />\n        {selected && (\n          <MarkerInfo\n            selectedCluster={selected}\n            prevSelected={prevSelected}\n            setSelected={setSelected}\n            setPrevSelected={setPrevSelected}\n            joinGame={joinGame}\n            supercluster={supercluster}\n            colorScheme={props.colorScheme}\n          />\n        )}\n      </ReactMapGL>\n    </div >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  //modify game data to GeoJSON for supercluster\n  const points = state.games.map(game => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      ...game\n    },\n    geometry: {\n      type: 'Point',\n      coordinates: [\n        game.location.long,\n        game.location.lat\n      ]\n    }\n  }))\n\n  return {\n    points,\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { addPlayer })(Map)","import axios from 'axios'\n\nconst locationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOCATION':\n      return action.location\n    default:\n      return state\n  }\n}\n\nconst ipLookUp = async () => {\n  const res = await axios.get('https://ipapi.co/json/')\n  return res.data\n}\n\nexport const changeLocation = () => {\n  return async dispatch => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      },\n      (message) => {\n        console.log('failed to get location', message)\n        const response = ipLookUp()\n        response.then(res => {\n          console.log('response', res)\n          const userLocation = {\n            lat: res.latitude,\n            lng: res.longitude\n          }\n          dispatch({\n            type: 'CHANGE_LOCATION',\n            location: userLocation\n          })\n        })\n      })\n\n    } else {\n      console.log('geolocation not supported in this browser')\n      const response = ipLookUp()\n      response.then(res => {\n        const userLocation = {\n          lat: res.latitude,\n          lng: res.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      })\n    }\n  }\n}\n\nexport default locationReducer","const colorSchemeReducer = (state = 'light', action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return action.colorScheme\n    default:\n      return state\n  }\n}\n\nexport const changeColor = (colorScheme) => {\n  window.localStorage.setItem('colorScheme', colorScheme)\n  return {\n    type: 'CHANGE_COLOR',\n    colorScheme\n  }\n}\n\nexport default colorSchemeReducer","import React from 'react'\nimport { WithStore, Slider, Slide, ButtonNext } from 'pure-react-carousel'\nimport { Image, Icon, Button } from 'semantic-ui-react'\nimport welcome from '../../resources/intro/welcome.png'\nimport findGames from '../../resources/intro/findGames.png'\nimport joinGame from '../../resources/intro/joinGame.png'\nimport createGame from '../../resources/intro/createGame.png'\n\nclass CarouselLarge extends React.Component {\n  render() {\n    return (\n      <div>\n        <Slider>\n          <Slide index={0}>\n            <Image\n              wrapped\n              src={welcome}\n              as='a'\n              href='http://www.freepik.com'\n            />\n            <p>Designed by upklyak</p>\n          </Slide>\n          <Slide index={1}>\n            <Image wrapped src={findGames} />\n          </Slide>\n          <Slide index={2}>\n            <Image wrapped src={joinGame} />\n          </Slide>\n          <Slide index={3}>\n            <Image wrapped src={createGame} />\n          </Slide>\n        </Slider>\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          {this.props.current < 3 && (\n            <ButtonNext className='ui massive icon circular basic inverted button'>\n              <Icon name='arrow right' />\n            </ButtonNext>\n          )}\n          {this.props.current === 3 && (\n            <Button\n              className='ui massive icon green basic circular inverted'\n              onClick={this.props.closeModal}\n            >\n              <Icon name='check' />\n            </Button>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WithStore(CarouselLarge, state => ({\n  current: state.currentSlide\n}))","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Modal } from 'semantic-ui-react'\nimport { CarouselProvider } from 'pure-react-carousel'\nimport 'pure-react-carousel/dist/react-carousel.es.css'\nimport CarouselLarge from './CarouselLarge'\nimport { disableIntro } from '../../reducers/userReducer'\n\nconst Intro = ({ user, disableIntro }) => {\n  const [open, setOpen] = useState(true)\n\n  const closeModal = async () => {\n    setOpen(false)\n    disableIntro(user)\n  }\n\n  return (\n    <Modal\n      basic\n      open={open}\n      centered={false}\n      closeOnDimmerClick={false}\n    >\n      <CarouselProvider\n        naturalSlideWidth={1}\n        naturalSlideHeight={0.6}\n        totalSlides={4}\n      >\n        <CarouselLarge closeModal={closeModal} />\n      </CarouselProvider>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { disableIntro })(Intro)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Image, Segment, Grid, Menu, Card, Header, Divider, Radio } from 'semantic-ui-react'\nimport profilepic from '../../resources/placeholderprofilepic.png'\nimport NavigationBar from '../NavigationBar'\nimport gameService from '../../services/games'\nimport playerService from '../../services/players'\nimport { changeColor } from '../../reducers/colorSchemeReducer'\n\nconst Profile = ({ user, colorScheme, changeColor }) => {\n  const [active, setActive] = useState('created')\n  const [createdGames, setCreatedGames] = useState(null)\n  const [participated, setParticipated] = useState(null)\n\n  const segmentClass = colorScheme === 'dark' ? 'segmentDarkest' : ''\n  const textColor = colorScheme === 'dark' ? 'white' : 'black'\n  const cardColor = colorScheme === 'dark' ? '#192430' : ''\n\n  useEffect(() => {\n    console.log('haetaan pelejä')\n    async function fetchData() {\n      const created = await gameService.getByOwner(user.id)\n      setCreatedGames(created.reverse())\n      const participated = await playerService.getByUser(user.id)\n      setParticipated(participated.reverse())\n    }\n    fetchData()\n  }, [user.id])\n\n  const toggleColor = () => {\n    const color = colorScheme === 'light' ? 'dark' : 'light'\n    changeColor(color)\n  }\n\n  return (\n    <div>\n      <NavigationBar />\n      <Container text style={{ marginTop: '5em' }}>\n        <Segment className={segmentClass}>\n          <Grid columns={3}>\n            <Grid.Row>\n              <Grid.Column>\n                <Image src={profilepic} circular size='small' />\n              </Grid.Column>\n              <Grid.Column>\n                <Header size='large' style={{ position: 'absolute', bottom: '0px', color: textColor }}>\n                  {user.username}\n                </Header>\n              </Grid.Column>\n              <Grid.Column textAlign='right'>\n                <p style={{ color: textColor }}>Dark</p>\n                <Radio\n                  toggle\n                  checked={colorScheme === 'dark'}\n                  onChange={toggleColor}\n                  className='toggle'\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Divider />\n          <Menu pointing secondary inverted={colorScheme === 'dark'}>\n            <Menu.Item\n              name='Created games'\n              active={active === 'created'}\n              onClick={() => setActive('created')}\n            />\n            <Menu.Item\n              name='Game history'\n              active={active === 'history'}\n              onClick={() => setActive('history')}\n            />\n          </Menu>\n          <div>\n            {createdGames && active === 'created' && (\n              <div>\n                {createdGames.map(game => (\n                  <Card fluid key={game.id} style={{ backgroundColor: cardColor }}>\n                    <Card.Content>\n                      <Card.Meta style={{ color: textColor }} >\n                        Game created by {game.owner.username}\n                      </Card.Meta>\n                      <Card.Description style={{ color: textColor }}>\n                        {game.desc}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))}\n              </div>\n            )}\n            {participated && active === 'history' && (\n              <div>\n                {participated.map(participated => (\n                  <Card fluid key={participated.game.id} style={{ backgroundColor: cardColor }}>\n                    <Card.Content>\n                      <Card.Meta style={{ color: textColor }} >\n                        Game created by {participated.game.owner.username}\n                      </Card.Meta>\n                      <Card.Description style={{ color: textColor }}>\n                        {participated.game.desc}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </div>\n        </Segment>\n      </Container>\n\n    </div >\n  )\n}\n\nconst mapStateToPorps = (state) => {\n  return {\n    user: state.user,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToPorps, { changeColor })(Profile)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport FrontPage from './components/FrontPage/FrontPage'\nimport Map from './components/MapPage/Map'\nimport { initializeGames } from './reducers/gameReducer'\nimport { stayLoggedIn } from './reducers/userReducer'\nimport { changeLocation } from './reducers/locationReducer'\nimport { changeColor } from './reducers/colorSchemeReducer'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.css'\nimport Intro from './components/Intro/Intro'\nimport Profile from './components/Profile/Profile'\n\ntoast.configure({\n  autoClose: 3500,\n  hideProgressBar: true\n})\n\nconst App = (props) => {\n  const initGames = props.initializeGames\n  const keepUserLogged = props.stayLoggedIn\n  const setLocation = props.changeLocation\n  const changeColor = props.changeColor\n  const colorScheme = props.colorScheme\n\n  useEffect(() => {\n    initGames()\n  }, [initGames])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      keepUserLogged(user)\n    }\n  }, [keepUserLogged])\n\n  useEffect(() => {\n    setLocation()\n  }, [setLocation])\n\n  useEffect(() => {\n    const colorScheme = window.localStorage.getItem('colorScheme')\n    if (colorScheme) {\n      changeColor(colorScheme)\n    } else {\n      changeColor('light')\n    }\n  }, [changeColor])\n\n  useEffect(() => {\n    if (colorScheme === 'dark') {\n      document.body.classList.add('bodyDark')\n    } else if (colorScheme === 'light') {\n      document.body.classList.remove('bodyDark')\n    }\n  }, [colorScheme])\n\n  if (props.user === null) {\n    return (\n      <div>\n        <FrontPage colorScheme={props.colorScheme} />\n      </div>\n    )\n  }\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/profile'>\n          <div>\n            <Profile />\n          </div>\n        </Route>\n        <Route path=''>\n          {props.user.showIntro && (\n            <Intro />\n          )}\n          {!props.user.showIntro && (\n            <Map />\n          )}\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { initializeGames, stayLoggedIn, changeLocation, changeColor })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './reducers/gameReducer'\nimport userReducer from './reducers/userReducer'\nimport locationReducer from './reducers/locationReducer'\nimport colorSchemeReducer from './reducers/colorSchemeReducer'\n\n// used colors:\n// darkest: #1c2836\n// mid: #192430\n// lightest: #243447\n\nconst reducer = combineReducers({\n  games: gameReducer,\n  user: userReducer,\n  location: locationReducer,\n  colorScheme: colorSchemeReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}