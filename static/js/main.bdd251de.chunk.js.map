{"version":3,"sources":["resources/kobe.jpg","resources/bball.svg","services/users.js","services/login.js","services/games.js","services/players.js","reducers/loginReducer.js","components/FrontPage/NewAccountForm.js","components/FrontPage/LoginForm.js","components/FrontPage/FrontPage.js","components/MapPage/Markers/Game.js","components/MapPage/Markers/Markers.js","components/MapPage/MarkerInfo/GameInfo.js","components/MapPage/MarkerInfo/ClusterInfo.js","components/MapPage/MarkerInfo/MarkerInfo.js","reducers/colorSchemeReducer.js","components/NavigationBar.js","reducers/gameReducer.js","components/MapPage/NewGameForm.js","components/MapPage/Markers/NewGameLocation.js","components/MapPage/NoLocation.js","components/MapPage/Map.js","reducers/locationReducer.js","App.js","index.js"],"names":["module","exports","baseUrl","create","newUser","a","axios","post","login","credentials","response","data","token","getAllActive","get","newGame","config","headers","Authorization","setToken","newToken","game","username","password","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","gameService","playerService","type","loginReducer","state","action","connect","props","useState","newUsername","setNewUsername","newName","setNewName","newPassword","setNewPassword","notification","setNotification","textColor","colorScheme","inputClass","segmentClass","createAccount","event","preventDefault","name","userService","toast","info","position","POSITION","TOP_CENTER","error","Grid","Column","Segment","className","Form","onSubmit","Header","as","style","color","Message","id","placeholder","value","onChange","target","Button","fluid","size","setUsername","setPassword","handleLogin","exception","Group","inline","widths","FrontPage","columns","Row","paddingBottom","paddingTop","Subheader","src","kobe","alt","maxWidth","maxHeight","Game","cluster","zoom","properties","latitude","location","lat","longitude","long","onClick","bball","height","width","Markers","clusters","map","geometry","coordinates","key","point_count","GameInfo","gameInfo","setSelected","prevSelected","setPrevSelected","joinGame","backgroundColor","inverted","showPrevIcon","date","endTime","slice","time","Modal","defaultOpen","onClose","closeOnDimmerClick","closeIcon","Icon","link","Content","floated","primary","Description","owner","desc","participants","length","maxParticipants","List","bulleted","participant","Item","Divider","ClusterInfo","clusterInfo","supercluster","games","getLeaves","cardColor","i","Card","Meta","MarkerInfo","selectedCluster","changeColor","colorSchemeReducer","logOut","removeItem","navBarColor","Menu","Dropdown","item","text","gameReducer","concat","updatedGame","find","gameId","createGame","duration","setDuration","setDesc","setmaxParticipants","radioValue","setRadioValue","latestClick","setNewGameLocation","useEffect","createNewGame","durationMins","newGameLocation","lng","setLatestClick","setFormVisible","formVisible","top","right","marginTop","marginRight","zIndex","Radio","checked","toFixed","NewGameLocation","NoLocation","Container","icon","warning","points","addPlayer","viewport","setViewport","selected","mapStyle","mapRef","useRef","mapBounds","current","getMap","getBounds","toArray","flat","useSupercluster","bounds","options","radius","maxZoom","updatedParticipants","updatedProperties","updatedSelected","warn","getCursor","isDragging","ref","mapboxApiAccessToken","process","onViewportChange","click","lngLat","zoomLevel","Math","min","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","ipLookUp","res","locationReducer","configure","autoClose","hideProgressBar","initializeGames","stayLoggedIn","changeLocation","navigator","geolocation","getCurrentPosition","userLocation","coords","message","console","log","then","initGames","keepUserLogged","setLocation","loggedUserJSON","getItem","parse","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdd251de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kobe.4b4fdbac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bball.527662f6.svg\";","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/users'\n\nconst create = async (newUser) => {\n  return await axios.post(`${baseUrl}${apiUrl}`, newUser)\n}\n\nexport default {\n  create\n}","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}${apiUrl}`, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/games'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAllActive = async () => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/active`)\n  return response.data\n}\n\nconst create = async (newGame) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, newGame, config)\n  return response.data\n}\n\nexport default {\n  getAllActive,\n  create,\n  setToken\n}","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/players'\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (game) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, game, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  create\n}","import loginService from '../services/login'\nimport gameService from '../services/games'\nimport playerService from '../services/players'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'STAY_LOGGED_IN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      gameService.setToken(user.token)\n      playerService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedInUser')\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const stayLoggedIn = (user) => {\n  return async dispatch => {\n    gameService.setToken(user.token)\n    playerService.setToken(user.token)\n    dispatch({\n      type: 'STAY_LOGGED_IN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import React, { useState } from 'react'\nimport userService from '../../services/users'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/loginReducer'\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewAccountForm = (props) => {\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDark' : ''\n\n  const createAccount = async (event) => {\n    event.preventDefault()\n    try {\n      const newUser = {\n        username: newUsername,\n        name: newName,\n        password: newPassword\n      }\n      await userService.create(newUser)\n      setNewUsername('')\n      setNewName('')\n      setNewPassword('')\n      setNotification('')\n      props.login(newUser.username, newUser.password)\n      toast.info(`Welcome ${newUser.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    } catch (exception) {\n      setNotification(exception.response.data.error)\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column>\n        <Segment className={segmentClass}>\n          <Form onSubmit={createAccount}>\n            <Header as='h2' style={{ color: textColor }}>\n              Sign up\n            </Header>\n            {notification !== '' && (\n              <Message>\n                {notification}\n              </Message>\n            )}\n            <div className='field'>\n              <label style={{ color: textColor }}>Username</label>\n              <div className='ui fluid input'>\n                <input\n                  className={inputClass}\n                  id='username'\n                  type='text'\n                  placeholder='Username (3-15 characters)'\n                  value={newUsername}\n                  onChange={({ target }) => setNewUsername(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: textColor }}>Name</label>\n              <div className='ui fluid input'>\n                <input\n                  className={inputClass}\n                  id='name'\n                  type='text'\n                  placeholder='Name (2-30 characters)'\n                  value={newName}\n                  onChange={({ target }) => setNewName(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: textColor }}>Password</label>\n              <div className='ui fluid input'>\n                <input\n                  className={inputClass}\n                  id='password'\n                  type='password'\n                  placeholder='Password (min. 5 characters)'\n                  value={newPassword}\n                  onChange={({ target }) => setNewPassword(target.value)}\n                />\n              </div>\n            </div>\n            <Button color='blue' fluid size='large' id='accountCreation-button'>\n              Sign up\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default connect(null, { login })(NewAccountForm)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/loginReducer'\nimport { Button, Form, Message, Header } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const exception = await props.login(username, password)\n\n    if (exception) {\n      setPassword('')\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Welcome ${username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={handleLogin}\n    >\n      <Header\n        as='h2'\n        style={{ color: textColor }}\n      >\n        Login\n      </Header>\n      <Form.Group\n        inline\n        widths='equal'\n      >\n        <div\n          className='field'\n        >\n          <div\n            className='ui fluid input'\n          >\n            <input\n              className={inputClass}\n              id='login-username'\n              type='text'\n              placeholder='Username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n        </div>\n        <div\n          className='field'\n        >\n          <div\n            className='ui fluid input'\n          >\n            <input\n              className={inputClass}\n              id='login-password'\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n        </div>\n        <Button\n          color='blue'\n          id='login-button'\n        >\n          Login\n        </Button>\n      </Form.Group>\n      {notification !== '' && (\n        <Message>\n          {notification}\n        </Message>\n      )}\n    </Form>\n  )\n}\n\nexport default connect(null, { login })(LoginForm)","import React from 'react'\nimport { Grid, Header } from 'semantic-ui-react'\nimport NewAccountForm from './NewAccountForm'\nimport LoginForm from './LoginForm'\nimport kobe from '../../resources/kobe.jpg'\n\nconst FrontPage = ({ colorScheme }) => {\n  const textColor = colorScheme === 'dark' ? 'white' : 'black'\n  return (\n    <Grid columns={2}>\n      <Grid.Row style={{ paddingBottom: '20px', paddingTop: '50px' }}>\n        <Grid.Column>\n        </Grid.Column>\n        <Grid.Column>\n          <LoginForm colorScheme={colorScheme} />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <Header as='h1' style={{ color: textColor }}>\n            Pickupgame finder\n            <Header.Subheader style={{ color: textColor }}>\n              Find local pickupgames and start balling\n            </Header.Subheader>\n          </Header>\n          <img src={kobe} alt=\"Basketball legend Kobe Bryant\" style={{ maxWidth: '60%', maxHeight: '60%' }} />\n        </Grid.Column>\n        <Grid.Column>\n          <NewAccountForm colorScheme={colorScheme} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default FrontPage","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport bball from '../../../resources/bball.svg'\n\nconst Game = ({ cluster, zoom }) => {\n  const game = cluster.properties\n  return (\n\n    <Marker\n      latitude={game.location.lat}\n      longitude={game.location.long}\n    >\n      <div onClick={() => { zoom(cluster) }}>\n        <img src={bball} alt='basketballgame here' style={{ height: '25px', width: '25px' }} />\n      </div>\n    </Marker>\n  )\n}\n\nexport default Game","import React from 'react'\nimport Game from './Game'\nimport { Marker } from 'react-map-gl'\n\nconst Markers = ({ clusters, zoom }) => {\n  return (\n    clusters.map(cluster => {\n      const [longitude, latitude] = cluster.geometry.coordinates\n\n      if (cluster.properties.cluster) {\n        return (\n          <Marker\n            key={cluster.id}\n            latitude={latitude}\n            longitude={longitude}\n          >\n            <div onClick={() => zoom(cluster)} style={{ 'color': 'black', 'backgroundColor': '#cc5500', 'borderRadius': '50%', 'width': '25px', 'height': '25px', 'textAlign': 'center', 'lineHeight': '25px' }}>\n              {cluster.properties.point_count}\n            </div>\n          </Marker>\n        )\n      }\n\n      return (\n        <Game\n          key={cluster.properties.id}\n          cluster={cluster}\n          zoom={zoom}\n        />\n      )\n    })\n  )\n}\n\nexport default Markers","import React from 'react'\nimport { Modal, Icon, Header, List, Divider, Button } from 'semantic-ui-react'\n\nconst GameInfo = ({ gameInfo, setSelected, prevSelected, setPrevSelected, joinGame, colorScheme }) => {\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#141d26' : '',\n    inverted: colorScheme === 'dark'\n  }\n\n  const showPrevIcon = prevSelected !== null ? true : false\n  const date = gameInfo.endTime.slice(0, 10)\n  const time = gameInfo.endTime.slice(11, 16)\n\n  const goBack = () => {\n    setSelected(prevSelected)\n  }\n\n  const close = () => {\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal defaultOpen={true} onClose={close} closeOnDimmerClick={false} closeIcon>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor }}>\n        {showPrevIcon && (\n          <Icon inverted={style.inverted} link name='arrow left' onClick={goBack} />\n        )}\n      </Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        <Button floated='right' primary onClick={() => joinGame(gameInfo.id)}>\n          Join\n        </Button>\n        <Modal.Description>\n          <Header style={{ color: style.textColor }}>Game by {gameInfo.owner.username}</Header>\n          <p style={{ color: style.textColor }}>{gameInfo.desc}</p>\n          <p style={{ color: style.textColor }}>Participants: ({gameInfo.participants.length}/{gameInfo.maxParticipants})</p>\n          <List bulleted>\n            {gameInfo.participants.map(participant =>\n              <List.Item key={participant.id} style={{ color: style.textColor }}>\n                {participant.username}\n              </List.Item>\n            )}\n          </List>\n          <Divider />\n          <p style={{ color: style.textColor }}>Game ends at: {date} {time} GMT</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default GameInfo","import React from 'react'\nimport { Modal, Card } from 'semantic-ui-react'\n\nconst ClusterInfo = ({ clusterInfo, supercluster, setSelected, setPrevSelected, colorScheme }) => {\n  const games = supercluster.getLeaves(clusterInfo.id)\n\n  const style = {\n    textColor: colorScheme === 'dark' ? 'white' : 'black',\n    backgroundColor: colorScheme === 'dark' ? '#141d26' : '',\n    cardColor: colorScheme === 'dark' ? '#1c2836' : ''\n  }\n\n  const close = () => {\n    setPrevSelected(null)\n    setSelected(null)\n  }\n\n  return (\n    <Modal defaultOpen={true} onClose={close} closeOnDimmerClick={false} closeIcon>\n      <Modal.Header style={{ backgroundColor: style.backgroundColor, color: style.textColor }}>Games in this location</Modal.Header>\n      <Modal.Content style={{ backgroundColor: style.backgroundColor }}>\n        {games.map((game, i) =>\n          <Card style={{ backgroundColor: style.cardColor }} fluid onClick={() => { setPrevSelected(clusterInfo); setSelected(game) }} key={game.properties.id}>\n            <Card.Content>\n              <Card.Header style={{ color: style.textColor }}>\n                Game {i}\n              </Card.Header>\n              <Card.Meta style={{ color: style.textColor }}>\n                Created by {game.properties.owner.username}\n              </Card.Meta>\n              <Card.Description style={{ color: style.textColor }}>\n                {game.properties.desc}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nexport default ClusterInfo","import React from 'react'\nimport GameInfo from './GameInfo'\nimport ClusterInfo from './ClusterInfo'\n\nconst MarkerInfo = ({ selectedCluster, prevSelected, setSelected, setPrevSelected, joinGame, supercluster, colorScheme }) => {\n  if (selectedCluster.properties.cluster) {\n    return (\n      <ClusterInfo\n        clusterInfo={selectedCluster}\n        supercluster={supercluster}\n        setSelected={setSelected}\n        setPrevSelected={setPrevSelected}\n        colorScheme={colorScheme}\n      />\n    )\n  } else {\n    return (\n      <GameInfo\n        gameInfo={selectedCluster.properties}\n        setSelected={setSelected}\n        prevSelected={prevSelected}\n        setPrevSelected={setPrevSelected}\n        joinGame={joinGame}\n        colorScheme={colorScheme}\n      />\n    )\n  }\n}\n\nexport default MarkerInfo","const colorSchemeReducer = (state = 'light', action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return action.colorScheme\n    default:\n      return state\n  }\n}\n\nexport const changeColor = (colorScheme) => {\n  window.localStorage.setItem('colorScheme', colorScheme)\n  return {\n    type: 'CHANGE_COLOR',\n    colorScheme\n  }\n}\n\nexport default colorSchemeReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown } from 'semantic-ui-react'\nimport { logOut } from '../reducers/loginReducer'\nimport { changeColor } from '../reducers/colorSchemeReducer'\n\nconst Navigation = (props) => {\n\n  const toggleColor = () => {\n    const color = props.colorScheme === 'light' ? 'dark' : 'light'\n    props.changeColor(color)\n  }\n\n  const navBarColor = props.colorScheme === 'dark' ? '#141d26' : '#0E6EB8'\n\n  return (\n    <Menu style={{ backgroundColor: navBarColor }}>\n      <Menu.Item name='home' style={{ color: 'white' }}>\n        Home\n      </Menu.Item>\n      <Menu.Menu position='right'>\n        <Dropdown item style={{ color: 'white' }} text={props.user.username}>\n          <Dropdown.Menu style={{ backgroundColor: navBarColor }}>\n            <Dropdown.Item onClick={toggleColor}>\n              <p style={{ color: 'white' }}>\n                {props.colorScheme === 'light' ? 'Use Darkmode' : 'Use lightmode'}\n              </p>\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => props.logOut()} style={{ color: 'white' }}>\n              <p style={{ color: 'white' }}>\n                Logout\n              </p>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    colorScheme: state.colorScheme,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { logOut, changeColor })(Navigation)","import gameService from '../services/games'\n\nconst gameReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_GAMES':\n      return action.data\n    case 'ADD_GAME':\n      return state.concat(action.data)\n    case 'ADD_PLAYER': {\n      const updatedGame = state.find(game => game.id === action.gameId)\n      updatedGame.participants = updatedGame.participants.concat(action.user)\n      return state.map(game => game.id === action.gameId ? updatedGame : game)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeGames = () => {\n  return async dispatch => {\n    const games = await gameService.getAllActive()\n    dispatch({\n      type: 'INIT_GAMES',\n      data: games\n    })\n  }\n}\n\nexport const addPlayer = (user, gameId) => {\n  return {\n    type: 'ADD_PLAYER',\n    user,\n    gameId\n  }\n}\n\nexport const createGame = (game) => {\n  return async dispatch => {\n    try {\n      const newGame = await gameService.create(game)\n      dispatch({\n        type: 'ADD_GAME',\n        data: newGame\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default gameReducer","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { createGame } from '../../reducers/gameReducer'\nimport { Grid, Segment, Form, Header, Button, Message, Icon } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewGameForm = (props) => {\n  const [duration, setDuration] = useState('')\n  const [desc, setDesc] = useState('')\n  const [maxParticipants, setmaxParticipants] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const inputClass = props.colorScheme === 'dark' ? 'inputDark' : ''\n  const textColor = props.colorScheme === 'dark' ? 'white' : 'black'\n  const segmentClass = props.colorScheme === 'dark' ? 'segmentDarkest' : ''\n\n  const radioValue = props.radioValue\n  const setRadioValue = props.setRadioValue\n  const location = props.location\n  const latestClick = props.latestClick\n  const setNewGameLocation = props.setNewGameLocation\n\n  useEffect(() => {\n    const selectedLocation = radioValue === 'curr' ? location : latestClick\n    setNewGameLocation(selectedLocation)\n  }, [latestClick, location, setNewGameLocation, radioValue])\n\n  const createNewGame = async (event) => {\n    event.preventDefault()\n    const newGame = {\n      durationMins: duration,\n      location: props.newGameLocation,\n      desc,\n      maxParticipants\n    }\n    const exception = await props.createGame(newGame)\n\n    if (exception) {\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Created a game for ${maxParticipants} players!`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setDuration('')\n      setDesc('')\n      setmaxParticipants(10)\n      setNotification('')\n      setRadioValue('curr')\n      props.setNewGameLocation({ lat: 0, lng: 0 })\n      props.setLatestClick({ lat: 0, lng: 0 })\n      props.setFormVisible(false)\n    }\n  }\n\n  if (!props.formVisible) {\n    return (\n      <Button\n        primary\n        style={{ position: 'absolute', top: '50px', right: '10px', zIndex: '9' }}\n        onClick={() => props.setFormVisible(true)}\n      >\n        New Game\n      </Button>\n    )\n  }\n\n  return (\n    <div>\n      <Grid style={{ position: 'absolute', top: '0', right: '0', marginTop: '35px', marginRight: '10px', zIndex: '9' }}>\n        <Grid.Column>\n          <Segment className={segmentClass}>\n            {/* <Button size='mini'\n              onClick={() => props.setFormVisible(false)}\n              style={{ border: '0', background: 'transparent', position: 'absolute', right: '0', top: '0' }}\n            >\n          </Button> */}\n            <Icon\n              name='close'\n              size='large'\n              inverted={props.colorScheme === 'dark'}\n              style={{ position: 'absolute', right: '0', top: '1' }}\n              onClick={() => props.setFormVisible(false)}\n            />\n            <Form onSubmit={createNewGame}>\n              <Header as='h2' style={{ color: textColor }}>\n                Start a game!\n              </Header>\n              {notification !== '' && (\n                <Message>\n                  {notification}\n                </Message>\n              )}\n              <Header as='h4' style={{ color: textColor }}>Location</Header>\n              <Form.Group inline>\n                <Form.Radio\n                  value='select'\n                  checked={radioValue === 'select'}\n                  onChange={() => setRadioValue('select')}\n                />\n                <label style={{ color: textColor }}>Select from map</label>\n                <Form.Radio\n                  value='curr'\n                  checked={radioValue === 'curr'}\n                  onChange={() => setRadioValue('curr')}\n                />\n                <label style={{ color: textColor }}>Use your location</label>\n              </Form.Group>\n              <p style={{ color: textColor }}>lat: {props.newGameLocation.lat.toFixed(4)}</p>\n              <p style={{ color: textColor }}>long: {props.newGameLocation.lng.toFixed(4)}</p>\n              <div className='field'>\n                <Header as='h4' style={{ color: textColor }}>Duration</Header>\n                <div className='ui fluid input'>\n                  <input\n                    id='duration'\n                    className={inputClass}\n                    type='number'\n                    placeholder='Duration in mins (1-180)'\n                    value={duration}\n                    onChange={({ target }) => setDuration(target.value)}\n                  />\n                </div>\n              </div>\n              <div className='field'>\n                <Header as='h4' style={{ color: textColor }}>Description</Header>\n                <div className='ui fluid input'>\n                  <input\n                    id='description'\n                    className={inputClass}\n                    type='text'\n                    placeholder='Description (5-140 chars)'\n                    value={desc}\n                    onChange={({ target }) => setDesc(target.value)}\n                  />\n                </div>\n              </div>\n              <div className='field'>\n                <Header as='h4' style={{ color: textColor }}>Maximum Players</Header>\n                <div className='ui fluid input'>\n                  <input\n                    id='participants'\n                    className={inputClass}\n                    type='number'\n                    placeholder='Max amount of participants (1-30)'\n                    value={maxParticipants}\n                    onChange={({ target }) => setmaxParticipants(target.value)}\n                  />\n                </div>\n              </div>\n              <Button color='blue' fluid size='large' id='gamecreation-button'>\n                Create a game\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { createGame })(NewGameForm)","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport { Icon } from 'semantic-ui-react'\n\n\nconst NewGameLocation = ({ location }) => (\n  <Marker\n    latitude={location.lat}\n    longitude={location.lng}\n  >\n    <Icon\n      name='map marker alternate'\n      color='red'\n      size='big'\n    />\n  </Marker>\n)\n\nexport default NewGameLocation","import React from 'react'\nimport { Container, Message, Icon } from 'semantic-ui-react'\n\nconst NoLocation = () => (\n  <Container>\n    <Message icon warning>\n      <Icon name='location arrow' />\n      <Message.Content>\n        <Message.Header>Pls, give location</Message.Header>\n        Please accept or deny the use of your location to continue using the app\n      </Message.Content>\n    </Message>\n  </Container>\n)\n\nexport default NoLocation","import React, { useState, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport playerService from '../../services/players'\nimport ReactMapGL, { FlyToInterpolator } from 'react-map-gl'\nimport useSupercluster from 'use-supercluster'\nimport Markers from './Markers/Markers'\nimport MarkerInfo from './MarkerInfo/MarkerInfo'\nimport Navigation from '../NavigationBar'\nimport NewGameForm from './NewGameForm'\nimport NewGameLocation from './Markers/NewGameLocation'\nimport NoLocation from './NoLocation'\nimport { toast } from 'react-toastify'\nimport { addPlayer } from '../../reducers/gameReducer'\n\nconst Map = (props) => {\n  const [viewport, setViewport] = useState({})\n  const [selected, setSelected] = useState(null)\n  const [prevSelected, setPrevSelected] = useState(null)\n  const [latestClick, setLatestClick] = useState({ lat: 0, lng: 0 })\n  const [formVisible, setFormVisible] = useState(false)\n  const [newGameLocation, setNewGameLocation] = useState({ lat: 0, lng: 0 })\n  const [radioValue, setRadioValue] = useState('curr')\n\n  const mapStyle = props.colorScheme === 'dark' ? 'mapbox://styles/ogrousu/ck6g74as70kw51io8h0ceo6h3' : 'mapbox://styles/ogrousu/ckae1dzbv0fvc1ilbhpvgy23t'\n\n  useEffect(() => {\n    //after user location is fetched, we initialize the map\n    setViewport({\n      latitude: props.location === null ? 0 : props.location.lat,\n      longitude: props.location === null ? 0 : props.location.lng,\n      zoom: props.location === null ? 0 : 12,\n      height: '100vh',\n      width: '100vw'\n    })\n  }, [props.location])\n\n  //boundaries of map for supercluster\n  const mapRef = useRef()\n  const mapBounds = mapRef.current ? mapRef.current.getMap().getBounds().toArray().flat() : null\n\n  //get game clusters from supercluster\n  const { clusters, supercluster } = useSupercluster({\n    points: props.points,\n    zoom: viewport.zoom,\n    bounds: mapBounds,\n    options: { radius: 100, maxZoom: 15 }\n  })\n\n  const joinGame = async (game) => {\n    try {\n      const response = await playerService.create({ game })\n      toast.info('Joined the game successfully', {\n        position: toast.POSITION.TOP_CENTER\n      })\n      props.addPlayer(response.user, response.game)\n\n      const updatedParticipants = selected.properties.participants.concat(response.user)\n      const updatedProperties = { ...selected.properties, participants: updatedParticipants }\n      const updatedSelected = {\n        geometry: selected.geometry,\n        properties: updatedProperties,\n        type: selected.type\n      }\n      setSelected(updatedSelected)\n    } catch (exception) {\n      toast.warn(exception.response.data.error, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  const zoom = (cluster) => {\n    //if no id, we are zooming to a single game\n    const zoomLevel = !cluster.id ? 15 : Math.min(supercluster.getClusterExpansionZoom(cluster.id), 15)\n    const [longitude, latitude] = cluster.geometry.coordinates\n    setSelected(cluster)\n\n    setViewport({\n      ...viewport,\n      latitude,\n      longitude,\n      zoom: zoomLevel,\n      transitionInterpolator: new FlyToInterpolator({\n        speed: 1\n      }),\n      transitionDuration: 'auto'\n    })\n  }\n\n  const mapClick = (click) => {\n    if (radioValue === 'select') {\n      setLatestClick({ lat: click.lngLat[1], lng: click.lngLat[0] })\n    }\n  }\n\n  const getCursorStyle = ({ isDragging }) => {\n    if (radioValue === 'select') {\n      return 'crosshair'\n    }\n    return isDragging ? 'grabbing' : 'grab'\n  }\n\n  if (props.location === null) {\n    return (\n      <NoLocation />\n    )\n  }\n\n  return (\n    <div>\n      <NewGameForm\n        latestClick={latestClick}\n        setLatestClick={setLatestClick}\n        formVisible={formVisible}\n        setFormVisible={setFormVisible}\n        newGameLocation={newGameLocation}\n        setNewGameLocation={setNewGameLocation}\n        radioValue={radioValue}\n        setRadioValue={setRadioValue}\n      />\n      <ReactMapGL\n        getCursor={getCursorStyle}\n        maxZoom={15}\n        ref={mapRef}\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        mapStyle={mapStyle}\n        onViewportChange={viewport => {\n          setViewport(viewport)\n        }}\n        onClick={mapClick}\n      >\n        <Navigation />\n        {formVisible && (\n          <NewGameLocation location={newGameLocation} />\n        )}\n        <Markers clusters={clusters} zoom={zoom} />\n        {selected && (\n          <MarkerInfo\n            selectedCluster={selected}\n            prevSelected={prevSelected}\n            setSelected={setSelected}\n            setPrevSelected={setPrevSelected}\n            joinGame={joinGame}\n            supercluster={supercluster}\n            colorScheme={props.colorScheme}\n          />\n        )}\n      </ReactMapGL>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  //modify game data to GeoJSON for supercluster\n  const points = state.games.map(game => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      ...game\n    },\n    geometry: {\n      type: 'Point',\n      coordinates: [\n        game.location.long,\n        game.location.lat\n      ]\n    }\n  }))\n\n  return {\n    points,\n    location: state.location,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { addPlayer })(Map)","import axios from 'axios'\n\nconst locationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOCATION':\n      return action.location\n    default:\n      return state\n  }\n}\n\nconst ipLookUp = async () => {\n  const res = await axios.get('https://ipapi.co/json/')\n  return res.data\n}\n\nexport const changeLocation = () => {\n  return async dispatch => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      },\n      (message) => {\n        console.log('failed to get location', message)\n        const response = ipLookUp()\n        response.then(res => {\n          console.log('response', res)\n          const userLocation = {\n            lat: res.latitude,\n            lng: res.longitude\n          }\n          dispatch({\n            type: 'CHANGE_LOCATION',\n            location: userLocation\n          })\n        })\n      })\n\n    } else {\n      console.log('geolocation not supported in this browser')\n      const response = ipLookUp()\n      response.then(res => {\n        const userLocation = {\n          lat: res.latitude,\n          lng: res.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      })\n    }\n  }\n}\n\nexport default locationReducer","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport FrontPage from './components/FrontPage/FrontPage'\nimport Map from './components/MapPage/Map'\nimport { initializeGames } from './reducers/gameReducer'\nimport { stayLoggedIn } from './reducers/loginReducer'\nimport { changeLocation } from './reducers/locationReducer'\nimport { changeColor } from './reducers/colorSchemeReducer'\nimport { Container } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.css'\n\ntoast.configure({\n  autoClose: 3500,\n  hideProgressBar: true\n})\n\nconst App = (props) => {\n  const initGames = props.initializeGames\n  const keepUserLogged = props.stayLoggedIn\n  const setLocation = props.changeLocation\n  const changeColor = props.changeColor\n\n  useEffect(() => {\n    initGames()\n  }, [initGames])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      keepUserLogged(user)\n    }\n  }, [keepUserLogged])\n\n  useEffect(() => {\n    setLocation()\n  }, [setLocation])\n\n  useEffect(() => {\n    const colorScheme = window.localStorage.getItem('colorScheme')\n    if (colorScheme) {\n      changeColor(colorScheme)\n    } else {\n      changeColor('light')\n    }\n  }, [changeColor])\n\n  if (props.user === null) {\n    return (\n      <div className={props.colorScheme === 'dark' ? 'bodyDark' : 'bodyLight'}>\n        <Container>\n          <FrontPage colorScheme={props.colorScheme} />\n        </Container>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Map />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    colorScheme: state.colorScheme\n  }\n}\n\nexport default connect(mapStateToProps, { initializeGames, stayLoggedIn, changeLocation, changeColor })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './reducers/gameReducer'\nimport loginReducer from './reducers/loginReducer'\nimport locationReducer from './reducers/locationReducer'\nimport colorSchemeReducer from './reducers/colorSchemeReducer'\n\n// used colors:\n// darkest: #141d26\n// mid: #1c2836\n// lightest: #243447\n\nconst reducer = combineReducers({\n  games: gameReducer,\n  user: loginReducer,\n  location: locationReducer,\n  colorScheme: colorSchemeReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}