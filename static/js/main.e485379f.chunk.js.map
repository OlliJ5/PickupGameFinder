{"version":3,"sources":["kobe.jpg","bball.svg","services/users.js","services/login.js","services/games.js","services/players.js","reducers/loginReducer.js","components/forms/NewAccountForm.js","components/forms/LoginForm.js","components/FrontPage.js","components/Game.js","components/GameInfo.js","components/Navigation.js","reducers/gameReducer.js","components/forms/NewGameForm.js","components/Map.js","reducers/locationReducer.js","App.js","index.js"],"names":["module","exports","baseUrl","create","newUser","a","axios","post","login","credentials","response","data","token","getAllActive","get","newGame","config","headers","Authorization","setToken","newToken","game","username","password","dispatch","loginService","user","window","localStorage","setItem","JSON","stringify","gameService","playerService","type","loginReducer","state","action","connect","props","useState","newUsername","setNewUsername","newName","setNewName","newPassword","setNewPassword","notification","setNotification","createAccount","event","preventDefault","name","userService","toast","info","position","POSITION","TOP_CENTER","error","Grid","Column","Segment","style","padding","backgroundColor","Form","onSubmit","Header","as","inverted","Message","className","color","id","placeholder","value","onChange","target","Button","fluid","size","setUsername","setPassword","handleLogin","exception","Group","inline","widths","FrontPage","columns","Row","paddingBottom","paddingTop","Subheader","src","kobe","alt","maxWidth","maxHeight","Game","setSelected","latitude","location","lat","longitude","long","border","background","onClick","bball","height","width","GameInfo","selectedGame","joinGame","date","endTime","slice","time","onClose","offsetLeft","offsetTop","participants","length","maxParticipants","marginLeft","List","bulleted","map","participant","Item","key","desc","logOut","removeItem","Menu","marginBottom","gameReducer","concat","updatedGame","find","gameId","userId","createGame","duration","setDuration","setDesc","setmaxParticipants","createNewGame","durationMins","toggler","top","right","marginTop","marginRight","Icon","games","addPlayer","zoom","viewport","setViewport","selected","formVisible","setFormVisible","toggleVisibility","useEffect","lng","warn","mapboxApiAccessToken","process","REACT_APP_MAPBOX_TOKEN","mapStyle","onViewportChange","primary","ipLookUp","res","locationReducer","configure","autoClose","hideProgressBar","initializeGames","stayLoggedIn","changeLocation","navigator","geolocation","getCurrentPosition","userLocation","coords","message","console","log","then","lon","initGames","keepUserLogged","setLocation","loggedUserJSON","getItem","parse","Container","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e485379f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kobe.4b4fdbac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bball.527662f6.svg\";","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/users'\n\nconst create = async (newUser) => {\n  return await axios.post(`${baseUrl}${apiUrl}`, newUser)\n}\n\nexport default {\n  create\n}","import axios from 'axios'\n\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}${apiUrl}`, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/games'\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAllActive = async () => {\n  const response = await axios.get(`${baseUrl}${apiUrl}/active`)\n  return response.data\n}\n\nconst create = async (newGame) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, newGame, config)\n  return response.data\n}\n\nexport default {\n  getAllActive,\n  create,\n  setToken\n}","import axios from 'axios'\n\nlet token = null\nlet baseUrl = ''\n\nif(process.env.NODE_ENV === 'production') {\n  baseUrl = 'https://pickupgamefinder.herokuapp.com'\n}\n\nconst apiUrl = '/api/players'\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (game) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}${apiUrl}`, game, config)\n  return response.data\n}\n\nexport default {\n  setToken,\n  create\n}","import loginService from '../services/login'\nimport gameService from '../services/games'\nimport playerService from '../services/players'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'STAY_LOGGED_IN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      gameService.setToken(user.token)\n      playerService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN',\n        user\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedInUser')\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const stayLoggedIn = (user) => {\n  return async dispatch => {\n    gameService.setToken(user.token)\n    playerService.setToken(user.token)\n    dispatch({\n      type: 'STAY_LOGGED_IN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import React, { useState } from 'react'\nimport userService from '../../services/users'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/loginReducer'\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewAccountForm = (props) => {\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const createAccount = async (event) => {\n    event.preventDefault()\n    try {\n      const newUser = {\n        username: newUsername,\n        name: newName,\n        password: newPassword\n      }\n      await userService.create(newUser)\n      setNewUsername('')\n      setNewName('')\n      setNewPassword('')\n      setNotification('')\n      props.login(newUser.username, newUser.password)\n      toast.info(`Welcome ${newUser.username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    } catch (exception) {\n      setNotification(exception.response.data.error)\n    }\n  }\n\n  return (\n    <Grid>\n      <Grid.Column>\n        <Segment style={{ padding: '20px', backgroundColor: '#1c2836' }}>\n          <Form onSubmit={createAccount}>\n            <Header as='h2' inverted>\n              Sign up\n            </Header>\n            {notification !== '' && (\n              <Message>\n                {notification}\n              </Message>\n            )}\n            <div className='field'>\n              <label style={{ color: 'white' }}>Username</label>\n              <div className='ui fluid input'>\n                <input\n                  id='username'\n                  style={{ color: 'white', backgroundColor: '#243447' }}\n                  type='text'\n                  placeholder='Username (3-15 characters)'\n                  value={newUsername}\n                  onChange={({ target }) => setNewUsername(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: 'white' }}>Name</label>\n              <div className='ui fluid input'>\n                <input\n                  id='name'\n                  style={{ color: 'white', backgroundColor: '#243447' }}\n                  type='text'\n                  placeholder='Name (2-30 characters)'\n                  value={newName}\n                  onChange={({ target }) => setNewName(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: 'white' }}>Password</label>\n              <div className='ui fluid input'>\n                <input\n                  id='password'\n                  style={{ color: 'white', backgroundColor: '#243447' }}\n                  type='password'\n                  placeholder='Password (min. 5 characters)'\n                  value={newPassword}\n                  onChange={({ target }) => setNewPassword(target.value)}\n                />\n              </div>\n            </div>\n            <Button color='blue' fluid size='large' id='accountCreation-button'>\n              Sign up\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default connect(null, { login })(NewAccountForm)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../reducers/loginReducer'\nimport { Button, Form, Message, Header } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const exception = await props.login(username, password)\n\n    if (exception) {\n      setPassword('')\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Welcome ${username}`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <Form onSubmit={handleLogin}>\n      <Header as='h2' inverted>\n        Login\n      </Header>\n      <Form.Group inline widths='equal'>\n        <div className='field'>\n          <div className='ui fluid input'>\n            <input\n              id='login-username'\n              style={{ color: 'white', backgroundColor: '#243447' }}\n              type='text'\n              placeholder='Username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n        </div>\n        <div className='field'>\n          <div className='ui fluid input'>\n            <input\n              id='login-password'\n              style={{ color: 'white', backgroundColor: '#243447' }}\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n        </div>\n        <Button color='blue' id='login-button'>\n          Login\n        </Button>\n      </Form.Group>\n      {notification !== '' && (\n        <Message>\n          {notification}\n        </Message>\n      )}\n    </Form>\n  )\n}\n\nexport default connect(null, { login })(LoginForm)","import React from 'react'\nimport { Grid, Header } from 'semantic-ui-react'\nimport NewAccountForm from './forms/NewAccountForm'\nimport LoginForm from './forms/LoginForm'\nimport kobe from '../kobe.jpg'\n\nconst FrontPage = () => {\n  return (\n    <Grid columns={2}>\n      <Grid.Row style={{  paddingBottom: '20px', paddingTop: '50px' }}>\n        <Grid.Column>\n        </Grid.Column>\n        <Grid.Column>\n          <LoginForm />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          <Header as='h1' inverted>\n            Pickupgame finder\n            <Header.Subheader>\n              Find local pickupgames and start balling\n            </Header.Subheader>\n          </Header>\n          <img src={kobe} alt=\"Basketball legend Kobe Bryant\" style={{ maxWidth: '60%', maxHeight: '60%' }} />\n        </Grid.Column>\n        <Grid.Column>\n          <NewAccountForm />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\n\n\n\n\nexport default FrontPage","import React from 'react'\nimport { Marker } from 'react-map-gl'\nimport bball from '../bball.svg'\n\nconst Game = ({ game, setSelected }) => (\n  <Marker\n    latitude={game.location.lat}\n    longitude={game.location.long}\n  >\n    <button style={{ border: '0', background: 'transparent' }}\n      onClick={() => setSelected(game)}\n    >\n      <img src={bball} alt='basketballgame here' style={{ height: '25px', width: '25px' }} />\n    </button>\n  </Marker>\n)\n\nexport default Game","import React from 'react'\nimport { Popup } from 'react-map-gl'\nimport { Button, List } from 'semantic-ui-react'\n\nconst GameInfo = ({ selectedGame, setSelected, joinGame }) => {\n  const date = selectedGame.endTime.slice(0, 10)\n  const time = selectedGame.endTime.slice(11, 16)\n  return (\n    <Popup\n      latitude={selectedGame.location.lat}\n      longitude={selectedGame.location.long}\n      onClose={() => setSelected(null)}\n      offsetLeft={18}\n      offsetTop={-7}\n    >\n      Participants ({selectedGame.participants.length}/{selectedGame.maxParticipants})\n      <Button onClick={() => joinGame(selectedGame.id)} style={{ marginLeft: '20px' }}>\n        Join\n      </Button>\n      <List bulleted>\n        {selectedGame.participants.map(participant =>\n          <List.Item key={participant}>\n            {participant}\n          </List.Item>\n        )}\n      </List>\n      <p>Game ends: {date} {time} GMT (....minutes left)</p>\n      <p>{selectedGame.desc}</p>\n    </Popup>\n  )\n}\n\nexport default GameInfo","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu } from 'semantic-ui-react'\nimport { logOut } from '../reducers/loginReducer'\n\nconst Navigation = (props) => {\n  return (\n    <Menu inverted style={{ marginBottom: '0' }}>\n      <Menu.Item\n        name='home'\n      >\n        Home\n      </Menu.Item>\n      <Menu.Item\n        position='right'\n        name='settings'\n        onClick={() => props.logOut()}\n      >\n        Logout\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default connect(null, { logOut })(Navigation)","import gameService from '../services/games'\n\nconst gameReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_GAMES':\n      return action.data\n    case 'ADD_GAME':\n      return state.concat(action.data)\n    case 'ADD_PLAYER': {\n      const updatedGame = state.find(game => game.id === action.gameId)\n      updatedGame.participants = updatedGame.participants.concat(action.userId)\n      return state.map(game => game.id === action.gameId ? updatedGame : game)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeGames = () => {\n  return async dispatch => {\n    const games = await gameService.getAllActive()\n    dispatch({\n      type: 'INIT_GAMES',\n      data: games\n    })\n  }\n}\n\nexport const addPlayer = (userId, gameId) => {\n  return {\n    type: 'ADD_PLAYER',\n    userId,\n    gameId\n  }\n}\n\nexport const createGame = (game) => {\n  return async dispatch => {\n    try {\n      const newGame = await gameService.create(game)\n      dispatch({\n        type: 'ADD_GAME',\n        data: newGame\n      })\n    } catch (exception) {\n      return exception.response\n    }\n  }\n}\n\nexport default gameReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createGame } from '../../reducers/gameReducer'\nimport { Grid, Segment, Form, Header, Button, Message, Icon } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\n\nconst NewGameForm = (props) => {\n  const [duration, setDuration] = useState('')\n  const [desc, setDesc] = useState('')\n  const [maxParticipants, setmaxParticipants] = useState('')\n  const [notification, setNotification] = useState('')\n\n  const createNewGame = async (event) => {\n    event.preventDefault()\n    const newGame = {\n      durationMins: duration,\n      location: props.location,\n      desc,\n      maxParticipants\n    }\n    const exception = await props.createGame(newGame)\n\n    if (exception) {\n      setNotification(exception.data.error)\n    } else {\n      toast.info(`Successfully created a game for ${maxParticipants} people in your location`, {\n        position: toast.POSITION.TOP_CENTER\n      })\n      setDuration('')\n      setDesc('')\n      setmaxParticipants(10)\n      setNotification('')\n      props.toggler()\n    }\n  }\n\n  return (\n    <Grid style={{ position: 'absolute', top: '0', right: '0', marginTop: '35px', marginRight: '10px' }}>\n      <Grid.Column>\n        <Segment style={{ padding: '20px', backgroundColor: '#141d26' }}>\n          <Button size='mini'\n            onClick={props.toggler}\n            style={{ border: '0', background: 'transparent', position: 'absolute', right: '0', top: '0' }}\n          >\n            <Icon name='close' size='small' inverted />\n          </Button>\n          <Form onSubmit={createNewGame}>\n            <Header as='h2' inverted>\n              Start a game!\n            </Header>\n            {notification !== '' && (\n              <Message>\n                {notification}\n              </Message>\n            )}\n            <div className='field'>\n              <label style={{ color: 'white' }}>Duration</label>\n              <div className='ui fluid input'>\n                <input\n                  id='duration'\n                  style={{ color: 'white', backgroundColor: '#243447' }}\n                  type='number'\n                  placeholder='Duration in mins (1-180)'\n                  value={duration}\n                  onChange={({ target }) => setDuration(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: 'white' }}>Description</label>\n              <div className='ui fluid input'>\n                <input\n                  id='description'\n                  style={{ color: 'white', backgroundColor: '#243447' }}\n                  type='text'\n                  placeholder='Description (5-140 chars)'\n                  value={desc}\n                  onChange={({ target }) => setDesc(target.value)}\n                />\n              </div>\n            </div>\n            <div className='field'>\n              <label style={{ color: 'white' }}>Maximum amount of participants</label>\n              <div className='ui fluid input'>\n                <input\n                  id='participants'\n                  style={{ color: 'white', backgroundColor: '#243447' }}\n                  type='number'\n                  placeholder='Max amount of participants (1-30)'\n                  value={maxParticipants}\n                  onChange={({ target }) => setmaxParticipants(target.value)}\n                />\n              </div>\n            </div>\n            <Button color='blue' fluid size='large' id='gamecreation-button'>\n              Create a game\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location\n  }\n}\n\nexport default connect(mapStateToProps, { createGame })(NewGameForm)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport playerService from '../services/players'\nimport ReactMapGL from 'react-map-gl'\nimport Game from './Game'\nimport GameInfo from './GameInfo'\nimport Navigation from './Navigation'\nimport NewGameForm from './forms/NewGameForm'\nimport { Button } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport { addPlayer } from '../reducers/gameReducer'\n\n\nconst Map = (props) => {\n  const [viewport, setViewport] = useState({\n    latitude: 0,\n    longitude: 0,\n    zoom: 3,\n    height: '100vh',\n    width: '100vw'\n  })\n\n  const [selected, setSelected] = useState(null)\n  const [formVisible, setFormVisible] = useState(false)\n\n  const toggleVisibility = () => {\n    setFormVisible(!formVisible)\n  }\n\n  useEffect(() => {\n    setViewport({\n      latitude: props.location === null ? 0 : props.location.lat,\n      longitude: props.location === null ? 0 : props.location.lng,\n      zoom: props.location === null ? 0 : 12,\n      height: '100vh',\n      width: '100vw'\n    })\n  }, [props.location])\n\n\n  const joinGame = async (game) => {\n    try {\n      const response = await playerService.create({ game })\n      toast.info('Joined the game successfully', {\n        position: toast.POSITION.TOP_CENTER\n      })\n      props.addPlayer(response.user, response.game)\n\n    } catch (exception) {\n      toast.warn(exception.response.data.error, {\n        position: toast.POSITION.TOP_CENTER\n      })\n    }\n  }\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      mapStyle='mapbox://styles/ogrousu/ck6g74as70kw51io8h0ceo6h3'\n      onViewportChange={viewport => {\n        setViewport(viewport)\n      }}\n      onClick={() => setSelected(null)}\n    >\n      <Navigation />\n      {formVisible && (\n        <NewGameForm toggler={toggleVisibility} />\n      )}\n      {!formVisible && (\n        <Button\n          primary\n          style={{ position: 'absolute', top: '50px', right: '10px' }}\n          onClick={toggleVisibility}\n        >\n          New Game\n        </Button>\n      )}\n      {props.games.map(game => (\n        <Game\n          key={game.id}\n          game={game}\n          setSelected={setSelected}\n        />\n      ))}\n      {selected && (\n        <GameInfo\n          selectedGame={selected}\n          setSelected={setSelected}\n          joinGame={joinGame}\n        />\n      )}\n    </ReactMapGL>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    games: state.games,\n    location: state.location\n  }\n}\n\nexport default connect(mapStateToProps, { addPlayer })(Map)","import axios from 'axios'\n\nconst locationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'CHANGE_LOCATION':\n      return action.location\n    default:\n      return state\n  }\n}\n\nconst ipLookUp = async () => {\n  const res = await axios.get('http://ip-api.com/json')\n  return res.data\n}\n\nexport const changeLocation = () => {\n  return async dispatch => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const userLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      },\n      (message) => {\n        console.log('failed to get location', message)\n        const response = ipLookUp()\n        response.then(res => {\n          const userLocation = {\n            lat: res.lat,\n            lng: res.lon\n          }\n          dispatch({\n            type: 'CHANGE_LOCATION',\n            location: userLocation\n          })\n        })\n      })\n\n    } else {\n      console.log('geolocation not supported in this browser')\n      const response = ipLookUp()\n      response.then(res => {\n        const userLocation = {\n          lat: res.lat,\n          lng: res.lon\n        }\n        dispatch({\n          type: 'CHANGE_LOCATION',\n          location: userLocation\n        })\n      })\n    }\n  }\n}\n\nexport default locationReducer","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport FrontPage from './components/FrontPage'\nimport Map from './components/Map'\nimport { initializeGames } from './reducers/gameReducer'\nimport { stayLoggedIn } from './reducers/loginReducer'\nimport { changeLocation } from './reducers/locationReducer'\nimport { Container } from 'semantic-ui-react'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\ntoast.configure({\n  autoClose: 3500,\n  hideProgressBar: true\n})\n\nconst App = (props) => {\n  const initGames = props.initializeGames\n  const keepUserLogged = props.stayLoggedIn\n  const setLocation = props.changeLocation\n\n  useEffect(() => {\n    initGames()\n  }, [initGames])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      keepUserLogged(user)\n    }\n  }, [keepUserLogged])\n\n  useEffect(() => {\n    setLocation()\n  }, [setLocation])\n\n  if (props.user === null) {\n    return (\n      <Container>\n        <FrontPage />\n      </Container>\n    )\n  }\n  return (\n    <div>\n      <Map />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { initializeGames, stayLoggedIn, changeLocation })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './reducers/gameReducer'\nimport loginReducer from './reducers/loginReducer'\nimport locationReducer from './reducers/locationReducer'\n\n// used colors:\n// darkes: #141d26\n// mid: #1c2836\n// lightest: #243447\n\nconst reducer = combineReducers({\n  games: gameReducer,\n  user: loginReducer,\n  location: locationReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}